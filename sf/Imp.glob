DIGEST df4ddb60abf1f46f451c26533a2e870e
FImp
R1676:1680 SfLib <> <> lib
mod 2146:2149 <> AExp
ind 2266:2269 AExp aexp
constr 2285:2288 AExp ANum
constr 2308:2312 AExp APlus
constr 2341:2346 AExp AMinus
constr 2375:2379 AExp AMult
R2299:2302 Imp <> aexp ind
R2292:2294 Coq.Init.Datatypes <> nat ind
R2332:2335 Imp <> aexp ind
R2324:2327 Imp <> aexp ind
R2316:2319 Imp <> aexp ind
R2366:2369 Imp <> aexp ind
R2358:2361 Imp <> aexp ind
R2350:2353 Imp <> aexp ind
R2399:2402 Imp <> aexp ind
R2391:2394 Imp <> aexp ind
R2383:2386 Imp <> aexp ind
ind 2416:2419 AExp bexp
constr 2435:2439 AExp BTrue
constr 2452:2457 AExp BFalse
constr 2470:2472 AExp BEq
constr 2501:2503 AExp BLe
constr 2532:2535 AExp BNot
constr 2556:2559 AExp BAnd
R2443:2446 Imp <> bexp ind
R2461:2464 Imp <> bexp ind
R2492:2495 Imp <> bexp ind
R2484:2487 Imp AExp aexp ind
R2476:2479 Imp AExp aexp ind
R2523:2526 Imp <> bexp ind
R2515:2518 Imp AExp aexp ind
R2507:2510 Imp AExp aexp ind
R2547:2550 Imp <> bexp ind
R2539:2542 Imp <> bexp ind
R2579:2582 Imp <> bexp ind
R2571:2574 Imp <> bexp ind
R2563:2566 Imp <> bexp ind
def 5188:5192 AExp aeval
R5199:5202 Imp AExp aexp ind
R5207:5209 Coq.Init.Datatypes <> nat ind
R5222:5222 Imp <> a var
R5233:5236 Imp AExp ANum constr
R5249:5253 Imp AExp APlus constr
R5264:5264 Coq.Init.Peano <> :nat_scope:x_'+'_x not
R5273:5277 Coq.Init.Peano <> :nat_scope:x_'+'_x not
R5286:5286 Coq.Init.Peano <> :nat_scope:x_'+'_x not
R5265:5269 Imp <> aeval def
R5278:5282 Imp <> aeval def
R5292:5297 Imp AExp AMinus constr
R5309:5309 Coq.Init.Peano <> :nat_scope:x_'-'_x not
R5318:5322 Coq.Init.Peano <> :nat_scope:x_'-'_x not
R5331:5331 Coq.Init.Peano <> :nat_scope:x_'-'_x not
R5310:5314 Imp <> aeval def
R5323:5327 Imp <> aeval def
R5337:5341 Imp AExp AMult constr
R5352:5352 Coq.Init.Peano <> :nat_scope:x_'*'_x not
R5361:5365 Coq.Init.Peano <> :nat_scope:x_'*'_x not
R5374:5374 Coq.Init.Peano <> :nat_scope:x_'*'_x not
R5353:5357 Imp <> aeval def
R5366:5370 Imp <> aeval def
def 5392:5402 AExp test_aeval1
R5438:5440 Coq.Init.Logic <> :type_scope:x_'='_x not
R5407:5411 Imp AExp aeval def
R5414:5418 Imp AExp APlus constr
R5430:5433 Imp AExp ANum constr
R5421:5424 Imp AExp ANum constr
def 5559:5563 AExp beval
R5570:5573 Imp AExp bexp ind
R5578:5581 Coq.Init.Datatypes <> bool ind
R5594:5594 Imp <> b var
R5605:5609 Imp AExp BTrue constr
R5620:5623 Coq.Init.Datatypes <> true constr
R5629:5634 Imp AExp BFalse constr
R5644:5648 Coq.Init.Datatypes <> false constr
R5654:5656 Imp AExp BEq constr
R5669:5675 Coq.Arith.EqNat <> beq_nat def
R5689:5693 Imp AExp aeval def
R5678:5682 Imp AExp aeval def
R5703:5705 Imp AExp BLe constr
R5718:5724 SfLib <> ble_nat def
R5738:5742 Imp AExp aeval def
R5727:5731 Imp AExp aeval def
R5752:5755 Imp AExp BNot constr
R5767:5770 Coq.Init.Datatypes <> negb def
R5773:5777 Imp <> beval def
R5787:5790 Imp AExp BAnd constr
R5802:5805 Coq.Init.Datatypes <> andb def
R5819:5823 Imp <> beval def
R5808:5812 Imp <> beval def
def 6222:6235 AExp optimize_0plus
R6240:6243 Imp AExp aexp ind
R6248:6251 Imp AExp aexp ind
R6264:6264 Imp <> a var
R6275:6278 Imp AExp ANum constr
R6291:6294 Imp AExp ANum constr
R6302:6306 Imp AExp APlus constr
R6309:6312 Imp AExp ANum constr
R6329:6342 Imp <> optimize_0plus def
R6351:6355 Imp AExp APlus constr
R6372:6376 Imp AExp APlus constr
R6399:6412 Imp <> optimize_0plus def
R6379:6392 Imp <> optimize_0plus def
R6422:6427 Imp AExp AMinus constr
R6444:6449 Imp AExp AMinus constr
R6472:6485 Imp <> optimize_0plus def
R6452:6465 Imp <> optimize_0plus def
R6495:6499 Imp AExp AMult constr
R6516:6520 Imp AExp AMult constr
R6543:6556 Imp <> optimize_0plus def
R6523:6536 Imp <> optimize_0plus def
def 6709:6727 AExp test_optimize_0plus
R6861:6865 Coq.Init.Logic <> :type_scope:x_'='_x not
R6732:6745 Imp AExp optimize_0plus def
R6748:6752 Imp AExp APlus constr
R6788:6792 Imp AExp APlus constr
R6835:6839 Imp AExp APlus constr
R6851:6854 Imp AExp ANum constr
R6842:6845 Imp AExp ANum constr
R6795:6798 Imp AExp ANum constr
R6755:6758 Imp AExp ANum constr
R6866:6870 Imp AExp APlus constr
R6882:6885 Imp AExp ANum constr
R6873:6876 Imp AExp ANum constr
prf 7105:7124 AExp optimize_0plus_sound
R7163:7165 Coq.Init.Logic <> :type_scope:x_'='_x not
R7139:7143 Imp AExp aeval def
R7146:7159 Imp AExp optimize_0plus def
R7161:7161 Imp <> a var
R7166:7170 Imp AExp aeval def
R7172:7172 Imp <> a var
prf 9278:9282 AExp ev100
R9286:9287 SfLib <> ev ind
R9317:9321 SfLib <> ev_SS constr
R9317:9321 SfLib <> ev_SS constr
R9317:9321 SfLib <> ev_SS constr
R9317:9321 SfLib <> ev_SS constr
R9317:9321 SfLib <> ev_SS constr
R9317:9321 SfLib <> ev_SS constr
R9317:9321 SfLib <> ev_SS constr
R9317:9321 SfLib <> ev_SS constr
R9317:9321 SfLib <> ev_SS constr
R9317:9321 SfLib <> ev_SS constr
R9317:9321 SfLib <> ev_SS constr
R9317:9321 SfLib <> ev_SS constr
R9317:9321 SfLib <> ev_SS constr
R9317:9321 SfLib <> ev_SS constr
R9317:9321 SfLib <> ev_SS constr
R9317:9321 SfLib <> ev_SS constr
R9317:9321 SfLib <> ev_SS constr
R9317:9321 SfLib <> ev_SS constr
R9317:9321 SfLib <> ev_SS constr
R9317:9321 SfLib <> ev_SS constr
R9317:9321 SfLib <> ev_SS constr
R9317:9321 SfLib <> ev_SS constr
R9317:9321 SfLib <> ev_SS constr
R9317:9321 SfLib <> ev_SS constr
R9317:9321 SfLib <> ev_SS constr
R9317:9321 SfLib <> ev_SS constr
R9317:9321 SfLib <> ev_SS constr
R9317:9321 SfLib <> ev_SS constr
R9317:9321 SfLib <> ev_SS constr
R9317:9321 SfLib <> ev_SS constr
R9317:9321 SfLib <> ev_SS constr
R9317:9321 SfLib <> ev_SS constr
R9317:9321 SfLib <> ev_SS constr
R9317:9321 SfLib <> ev_SS constr
R9317:9321 SfLib <> ev_SS constr
R9317:9321 SfLib <> ev_SS constr
R9317:9321 SfLib <> ev_SS constr
R9317:9321 SfLib <> ev_SS constr
R9317:9321 SfLib <> ev_SS constr
R9317:9321 SfLib <> ev_SS constr
R9317:9321 SfLib <> ev_SS constr
R9317:9321 SfLib <> ev_SS constr
R9317:9321 SfLib <> ev_SS constr
R9317:9321 SfLib <> ev_SS constr
R9317:9321 SfLib <> ev_SS constr
R9317:9321 SfLib <> ev_SS constr
R9317:9321 SfLib <> ev_SS constr
R9317:9321 SfLib <> ev_SS constr
R9317:9321 SfLib <> ev_SS constr
R9317:9321 SfLib <> ev_SS constr
R9317:9321 SfLib <> ev_SS constr
R9317:9321 SfLib <> ev_SS constr
R9416:9419 SfLib <> ev_0 constr
R9416:9419 SfLib <> ev_0 constr
prf 9647:9652 AExp ev100'
R9656:9657 SfLib <> ev ind
R9687:9690 SfLib <> ev_0 constr
R9687:9690 SfLib <> ev_0 constr
R9754:9758 SfLib <> ev_SS constr
R9754:9758 SfLib <> ev_SS constr
R9754:9758 SfLib <> ev_SS constr
R9754:9758 SfLib <> ev_SS constr
R9754:9758 SfLib <> ev_SS constr
R9754:9758 SfLib <> ev_SS constr
R9754:9758 SfLib <> ev_SS constr
R9754:9758 SfLib <> ev_SS constr
R9754:9758 SfLib <> ev_SS constr
R9754:9758 SfLib <> ev_SS constr
R9754:9758 SfLib <> ev_SS constr
R9754:9758 SfLib <> ev_SS constr
R9754:9758 SfLib <> ev_SS constr
R9754:9758 SfLib <> ev_SS constr
R9754:9758 SfLib <> ev_SS constr
R9754:9758 SfLib <> ev_SS constr
R9754:9758 SfLib <> ev_SS constr
R9754:9758 SfLib <> ev_SS constr
R9754:9758 SfLib <> ev_SS constr
R9754:9758 SfLib <> ev_SS constr
R9754:9758 SfLib <> ev_SS constr
R9754:9758 SfLib <> ev_SS constr
R9754:9758 SfLib <> ev_SS constr
R9754:9758 SfLib <> ev_SS constr
R9754:9758 SfLib <> ev_SS constr
R9754:9758 SfLib <> ev_SS constr
R9754:9758 SfLib <> ev_SS constr
R9754:9758 SfLib <> ev_SS constr
R9754:9758 SfLib <> ev_SS constr
R9754:9758 SfLib <> ev_SS constr
R9754:9758 SfLib <> ev_SS constr
R9754:9758 SfLib <> ev_SS constr
R9754:9758 SfLib <> ev_SS constr
R9754:9758 SfLib <> ev_SS constr
R9754:9758 SfLib <> ev_SS constr
R9754:9758 SfLib <> ev_SS constr
R9754:9758 SfLib <> ev_SS constr
R9754:9758 SfLib <> ev_SS constr
R9754:9758 SfLib <> ev_SS constr
R9754:9758 SfLib <> ev_SS constr
R9754:9758 SfLib <> ev_SS constr
R9754:9758 SfLib <> ev_SS constr
R9754:9758 SfLib <> ev_SS constr
R9754:9758 SfLib <> ev_SS constr
R9754:9758 SfLib <> ev_SS constr
R9754:9758 SfLib <> ev_SS constr
R9754:9758 SfLib <> ev_SS constr
R9754:9758 SfLib <> ev_SS constr
R9754:9758 SfLib <> ev_SS constr
R9754:9758 SfLib <> ev_SS constr
R9754:9758 SfLib <> ev_SS constr
R9754:9758 SfLib <> ev_SS constr
R9768:9771 SfLib <> ev_0 constr
R9768:9771 SfLib <> ev_0 constr
prf 10422:10427 AExp silly1
R10450:10452 Coq.Init.Logic <> :type_scope:x_'='_x not
R10442:10446 Imp AExp aeval def
R10448:10449 Imp <> ae var
R10453:10457 Imp AExp aeval def
R10459:10460 Imp <> ae var
prf 10536:10541 AExp silly2
R10569:10569 Imp <> P var
R10564:10564 Imp <> P var
prf 11285:11287 AExp foo
R11312:11314 Coq.Init.Logic <> :type_scope:x_'='_x not
R11301:11307 SfLib <> ble_nat def
R11311:11311 Imp <> n var
R11315:11318 Coq.Init.Datatypes <> true constr
prf 11565:11568 AExp foo'
R11593:11595 Coq.Init.Logic <> :type_scope:x_'='_x not
R11582:11588 SfLib <> ble_nat def
R11592:11592 Imp <> n var
R11596:11599 Coq.Init.Datatypes <> true constr
prf 11930:11950 AExp optimize_0plus_sound'
R11989:11991 Coq.Init.Logic <> :type_scope:x_'='_x not
R11965:11969 Imp AExp aeval def
R11972:11985 Imp AExp optimize_0plus def
R11987:11987 Imp <> a var
R11992:11996 Imp AExp aeval def
R11998:11998 Imp <> a var
prf 14778:14799 AExp optimize_0plus_sound''
R14838:14840 Coq.Init.Logic <> :type_scope:x_'='_x not
R14814:14818 Imp AExp aeval def
R14821:14834 Imp AExp optimize_0plus def
R14836:14836 Imp <> a var
R14841:14845 Imp AExp aeval def
R14847:14847 Imp <> a var
prf 19374:19396 AExp optimize_0plus_sound'''
R19435:19437 Coq.Init.Logic <> :type_scope:x_'='_x not
R19411:19415 Imp AExp aeval def
R19418:19431 Imp AExp optimize_0plus def
R19433:19433 Imp <> a var
R19438:19442 Imp AExp aeval def
R19444:19444 Imp <> a var
R20791:20793 Imp AExp BEq constr
def 20869:20884 AExp optimize_0plus_b
R20891:20894 Imp AExp bexp ind
R20899:20902 Imp AExp bexp ind
R20915:20915 Imp <> b var
R20926:20930 Imp AExp BTrue constr
R20935:20939 Imp AExp BTrue constr
R20945:20950 Imp AExp BFalse constr
R20955:20960 Imp AExp BFalse constr
R20966:20968 Imp AExp BEq constr
R20979:20981 Imp AExp BEq constr
R21004:21017 Imp AExp optimize_0plus def
R20984:20997 Imp AExp optimize_0plus def
R21027:21029 Imp AExp BLe constr
R21040:21042 Imp AExp BLe constr
R21065:21078 Imp AExp optimize_0plus def
R21045:21058 Imp AExp optimize_0plus def
R21088:21091 Imp AExp BNot constr
R21098:21101 Imp AExp BNot constr
R21103:21103 Imp <> b var
R21109:21112 Imp AExp BAnd constr
R21123:21126 Imp AExp BAnd constr
prf 21151:21172 AExp optimize_0plus_b_sound
R21214:21216 Coq.Init.Logic <> :type_scope:x_'='_x not
R21188:21192 Imp AExp beval def
R21195:21210 Imp AExp optimize_0plus_b def
R21212:21212 Imp <> b var
R21217:21221 Imp AExp beval def
R21223:21223 Imp <> b var
R21331:21350 Imp AExp optimize_0plus_sound thm
R21331:21350 Imp AExp optimize_0plus_sound thm
R21331:21350 Imp AExp optimize_0plus_sound thm
R21331:21350 Imp AExp optimize_0plus_sound thm
R21331:21350 Imp AExp optimize_0plus_sound thm
R21331:21350 Imp AExp optimize_0plus_sound thm
R21331:21350 Imp AExp optimize_0plus_sound thm
def 21693:21706 AExp optimize_bools
R21713:21716 Imp AExp bexp ind
R21721:21724 Imp AExp bexp ind
R21737:21737 Imp <> b var
R21748:21751 Imp AExp BAnd constr
R21790:21803 Imp <> optimize_bools def
R21769:21782 Imp <> optimize_bools def
R21834:21839 Imp AExp BFalse constr
R21847:21852 Imp AExp BFalse constr
R21877:21882 Imp AExp BFalse constr
R21887:21892 Imp AExp BFalse constr
R21914:21918 Imp AExp BTrue constr
R21954:21958 Imp AExp BTrue constr
R21998:22001 Imp AExp BAnd constr
R22037:22040 Imp AExp BNot constr
R22054:22067 Imp <> optimize_bools def
R22094:22098 Imp AExp BTrue constr
R22103:22108 Imp AExp BFalse constr
R22127:22132 Imp AExp BFalse constr
R22137:22141 Imp AExp BTrue constr
R22167:22170 Imp AExp BNot constr
prf 22224:22243 AExp optimize_bools_sound
R22283:22285 Coq.Init.Logic <> :type_scope:x_'='_x not
R22259:22263 Imp AExp beval def
R22266:22279 Imp AExp optimize_bools def
R22281:22281 Imp <> b var
R22286:22290 Imp AExp beval def
R22292:22292 Imp <> b var
R22429:22442 Imp AExp optimize_bools def
R22429:22442 Imp AExp optimize_bools def
R22595:22608 Imp AExp optimize_bools def
R22671:22684 Imp AExp optimize_bools def
R22730:22738 Coq.Bool.Bool <> andb_comm thm
R22595:22608 Imp AExp optimize_bools def
R22671:22684 Imp AExp optimize_bools def
R22671:22684 Imp AExp optimize_bools def
R22671:22684 Imp AExp optimize_bools def
R22671:22684 Imp AExp optimize_bools def
R22671:22684 Imp AExp optimize_bools def
R22730:22738 Coq.Bool.Bool <> andb_comm thm
R22730:22738 Coq.Bool.Bool <> andb_comm thm
R22730:22738 Coq.Bool.Bool <> andb_comm thm
R22730:22738 Coq.Bool.Bool <> andb_comm thm
R22730:22738 Coq.Bool.Bool <> andb_comm thm
R22730:22738 Coq.Bool.Bool <> andb_comm thm
R22730:22738 Coq.Bool.Bool <> andb_comm thm
R22730:22738 Coq.Bool.Bool <> andb_comm thm
def 23533:23556 AExp silly_presburger_example
R23616:23619 Coq.Init.Peano <> :nat_scope:x_'<='_x not
R23615:23615 Imp <> m var
R23620:23620 Imp <> p var
R23592:23595 Coq.Init.Logic <> :type_scope:x_'/\'_x not
R23583:23586 Coq.Init.Peano <> :nat_scope:x_'<='_x not
R23579:23581 Coq.Init.Peano <> :nat_scope:x_'+'_x not
R23578:23578 Imp <> m var
R23582:23582 Imp <> n var
R23588:23590 Coq.Init.Peano <> :nat_scope:x_'+'_x not
R23587:23587 Imp <> n var
R23591:23591 Imp <> o var
R23601:23603 Coq.Init.Logic <> :type_scope:x_'='_x not
R23597:23599 Coq.Init.Peano <> :nat_scope:x_'+'_x not
R23596:23596 Imp <> o var
R23605:23607 Coq.Init.Peano <> :nat_scope:x_'+'_x not
R23604:23604 Imp <> p var
mod 25697:25712 <> AExp.aevalR_first_try
ind 25726:25731 AExp.aevalR_first_try aevalR
constr 25762:25767 AExp.aevalR_first_try E_ANum
constr 25817:25823 AExp.aevalR_first_try E_APlus
constr 25947:25954 AExp.aevalR_first_try E_AMinus
constr 26078:26084 AExp.aevalR_first_try E_AMult
R25743:25745 Coq.Init.Datatypes <> nat ind
R25735:25738 Imp AExp.aevalR_first_try aexp ind
R25783:25785 Coq.Init.Datatypes <> nat ind
R25795:25800 Imp <> aevalR ind
R25811:25811 Imp <> n var
R25803:25806 Imp AExp.aevalR_first_try ANum constr
R25808:25808 Imp <> n var
R25842:25845 Imp AExp.aevalR_first_try aexp ind
R25856:25858 Coq.Init.Datatypes <> nat ind
R25912:25917 Imp <> aevalR ind
R25936:25938 Coq.Init.Peano <> :nat_scope:x_'+'_x not
R25934:25935 Imp <> n1 var
R25939:25940 Imp <> n2 var
R25920:25924 Imp AExp.aevalR_first_try APlus constr
R25929:25930 Imp <> e2 var
R25926:25927 Imp <> e1 var
R25890:25895 Imp <> aevalR ind
R25900:25901 Imp <> n2 var
R25897:25898 Imp <> e2 var
R25868:25873 Imp <> aevalR ind
R25878:25879 Imp <> n1 var
R25875:25876 Imp <> e1 var
R25972:25975 Imp AExp.aevalR_first_try aexp ind
R25986:25988 Coq.Init.Datatypes <> nat ind
R26042:26047 Imp <> aevalR ind
R26067:26069 Coq.Init.Peano <> :nat_scope:x_'-'_x not
R26065:26066 Imp <> n1 var
R26070:26071 Imp <> n2 var
R26050:26055 Imp AExp.aevalR_first_try AMinus constr
R26060:26061 Imp <> e2 var
R26057:26058 Imp <> e1 var
R26020:26025 Imp <> aevalR ind
R26030:26031 Imp <> n2 var
R26027:26028 Imp <> e2 var
R25998:26003 Imp <> aevalR ind
R26008:26009 Imp <> n1 var
R26005:26006 Imp <> e1 var
R26103:26106 Imp AExp.aevalR_first_try aexp ind
R26117:26119 Coq.Init.Datatypes <> nat ind
R26173:26178 Imp <> aevalR ind
R26197:26199 Coq.Init.Peano <> :nat_scope:x_'*'_x not
R26195:26196 Imp <> n1 var
R26200:26201 Imp <> n2 var
R26181:26185 Imp AExp.aevalR_first_try AMult constr
R26190:26191 Imp <> e2 var
R26187:26188 Imp <> e1 var
R26151:26156 Imp <> aevalR ind
R26161:26162 Imp <> n2 var
R26158:26159 Imp <> e2 var
R26129:26134 Imp <> aevalR ind
R26139:26140 Imp <> n1 var
R26136:26137 Imp <> e1 var
R26760:26765 Imp AExp.aevalR_first_try aevalR ind
not 26745 AExp.aevalR_first_try :type_scope:x_'||'_x
R26791:26806 Imp aevalR_first_try <> mod
ind 27310:27315 AExp aevalR
constr 27346:27351 AExp E_ANum
constr 27395:27401 AExp E_APlus
constr 27506:27513 AExp E_AMinus
constr 27619:27625 AExp E_AMult
R27327:27329 Coq.Init.Datatypes <> nat ind
R27319:27322 Imp AExp aexp ind
R27751:27756 Imp <> aevalR ind
R27365:27367 Coq.Init.Datatypes <> nat ind
R27377:27377 Imp AExp :type_scope:x_'||'_x not
R27384:27388 Imp AExp :type_scope:x_'||'_x not
R27378:27381 Imp AExp ANum constr
R27383:27383 Imp <> n var
R27389:27389 Imp <> n var
R27420:27423 Imp AExp aexp ind
R27435:27437 Coq.Init.Datatypes <> nat ind
R27475:27475 Imp AExp :type_scope:x_'||'_x not
R27487:27492 Imp AExp :type_scope:x_'||'_x not
R27500:27500 Imp AExp :type_scope:x_'||'_x not
R27476:27480 Imp AExp APlus constr
R27485:27486 Imp <> e2 var
R27482:27483 Imp <> e1 var
R27495:27497 Coq.Init.Peano <> :nat_scope:x_'+'_x not
R27493:27494 Imp <> n1 var
R27498:27499 Imp <> n2 var
R27464:27467 Imp AExp :type_scope:x_'||'_x not
R27462:27463 Imp <> e2 var
R27468:27469 Imp <> n2 var
R27450:27453 Imp AExp :type_scope:x_'||'_x not
R27448:27449 Imp <> e1 var
R27454:27455 Imp <> n1 var
R27532:27535 Imp AExp aexp ind
R27547:27549 Coq.Init.Datatypes <> nat ind
R27587:27587 Imp AExp :type_scope:x_'||'_x not
R27600:27605 Imp AExp :type_scope:x_'||'_x not
R27613:27613 Imp AExp :type_scope:x_'||'_x not
R27588:27593 Imp AExp AMinus constr
R27598:27599 Imp <> e2 var
R27595:27596 Imp <> e1 var
R27608:27610 Coq.Init.Peano <> :nat_scope:x_'-'_x not
R27606:27607 Imp <> n1 var
R27611:27612 Imp <> n2 var
R27576:27579 Imp AExp :type_scope:x_'||'_x not
R27574:27575 Imp <> e2 var
R27580:27581 Imp <> n2 var
R27562:27565 Imp AExp :type_scope:x_'||'_x not
R27560:27561 Imp <> e1 var
R27566:27567 Imp <> n1 var
R27645:27648 Imp AExp aexp ind
R27660:27662 Coq.Init.Datatypes <> nat ind
R27700:27700 Imp AExp :type_scope:x_'||'_x not
R27712:27717 Imp AExp :type_scope:x_'||'_x not
R27725:27725 Imp AExp :type_scope:x_'||'_x not
R27701:27705 Imp AExp AMult constr
R27710:27711 Imp <> e2 var
R27707:27708 Imp <> e1 var
R27720:27722 Coq.Init.Peano <> :nat_scope:x_'*'_x not
R27718:27719 Imp <> n1 var
R27723:27724 Imp <> n2 var
R27689:27692 Imp AExp :type_scope:x_'||'_x not
R27687:27688 Imp <> e2 var
R27693:27694 Imp <> n2 var
R27675:27678 Imp AExp :type_scope:x_'||'_x not
R27673:27674 Imp <> e1 var
R27679:27680 Imp <> n1 var
R27751:27756 Imp AExp aevalR ind
not 27736 AExp :type_scope:x_'||'_x
prf 30798:30813 AExp aeval_iff_aevalR
R30831:30831 Coq.Init.Logic <> :type_scope:x_'<->'_x not
R30838:30843 Coq.Init.Logic <> :type_scope:x_'<->'_x not
R30833:30836 Imp AExp :type_scope:x_'||'_x not
R30832:30832 Imp <> a var
R30837:30837 Imp <> n var
R30851:30853 Coq.Init.Logic <> :type_scope:x_'='_x not
R30844:30848 Imp AExp aeval def
R30850:30850 Imp <> a var
R30854:30854 Imp <> n var
R31343:31348 Imp AExp E_ANum constr
R31343:31348 Imp AExp E_ANum constr
R31380:31386 Imp AExp E_APlus constr
R31380:31386 Imp AExp E_APlus constr
R31481:31488 Imp AExp E_AMinus constr
R31481:31488 Imp AExp E_AMinus constr
R31582:31588 Imp AExp E_AMult constr
R31582:31588 Imp AExp E_AMult constr
prf 32133:32149 AExp aeval_iff_aevalR'
R32167:32167 Coq.Init.Logic <> :type_scope:x_'<->'_x not
R32174:32179 Coq.Init.Logic <> :type_scope:x_'<->'_x not
R32169:32172 Imp AExp :type_scope:x_'||'_x not
R32168:32168 Imp <> a var
R32173:32173 Imp <> n var
R32187:32189 Coq.Init.Logic <> :type_scope:x_'='_x not
R32180:32184 Imp AExp aeval def
R32186:32186 Imp <> a var
R32190:32190 Imp <> n var
ind 32607:32612 AExp bevalR
constr 32643:32649 AExp E_BTrue
constr 32675:32682 AExp E_BFalse
constr 32710:32714 AExp E_BEq
constr 32824:32828 AExp E_BLe
constr 32938:32943 AExp E_BAnd
constr 33060:33065 AExp E_BNot
R32623:32626 Coq.Init.Datatypes <> bool ind
R32615:32618 Imp AExp bexp ind
R32653:32658 Imp <> bevalR ind
R32666:32669 Coq.Init.Datatypes <> true constr
R32660:32664 Imp AExp BTrue constr
R32686:32691 Imp <> bevalR ind
R32700:32704 Coq.Init.Datatypes <> false constr
R32693:32698 Imp AExp BFalse constr
R32734:32737 Imp AExp aexp ind
R32749:32751 Coq.Init.Datatypes <> nat ind
R32785:32790 Imp <> bevalR ind
R32805:32811 Coq.Arith.EqNat <> beq_nat def
R32816:32817 Imp <> n2 var
R32813:32814 Imp <> n1 var
R32793:32795 Imp AExp BEq constr
R32800:32801 Imp <> a2 var
R32797:32798 Imp <> a1 var
R32775:32778 Imp AExp :type_scope:x_'||'_x not
R32773:32774 Imp <> a2 var
R32779:32780 Imp <> n2 var
R32763:32766 Imp AExp :type_scope:x_'||'_x not
R32761:32762 Imp <> a1 var
R32767:32768 Imp <> n1 var
R32848:32851 Imp AExp aexp ind
R32863:32865 Coq.Init.Datatypes <> nat ind
R32899:32904 Imp <> bevalR ind
R32919:32925 SfLib <> ble_nat def
R32930:32931 Imp <> n2 var
R32927:32928 Imp <> n1 var
R32907:32909 Imp AExp BLe constr
R32914:32915 Imp <> a2 var
R32911:32912 Imp <> a1 var
R32889:32892 Imp AExp :type_scope:x_'||'_x not
R32887:32888 Imp <> a2 var
R32893:32894 Imp <> n2 var
R32877:32880 Imp AExp :type_scope:x_'||'_x not
R32875:32876 Imp <> a1 var
R32881:32882 Imp <> n1 var
R32963:32966 Imp AExp bexp ind
R32978:32981 Coq.Init.Datatypes <> bool ind
R33023:33028 Imp <> bevalR ind
R33044:33047 Coq.Init.Datatypes <> andb def
R33052:33053 Imp <> b2 var
R33049:33050 Imp <> b1 var
R33031:33034 Imp AExp BAnd constr
R33039:33040 Imp <> e2 var
R33036:33037 Imp <> e1 var
R33007:33012 Imp <> bevalR ind
R33017:33018 Imp <> b2 var
R33014:33015 Imp <> e2 var
R32991:32996 Imp <> bevalR ind
R33001:33002 Imp <> b1 var
R32998:32999 Imp <> e1 var
R33081:33084 Imp AExp bexp ind
R33092:33095 Coq.Init.Datatypes <> bool ind
R33119:33124 Imp <> bevalR ind
R33136:33139 Coq.Init.Datatypes <> negb def
R33141:33141 Imp <> b var
R33127:33130 Imp AExp BNot constr
R33132:33132 Imp <> e var
R33105:33110 Imp <> bevalR ind
R33114:33114 Imp <> b var
R33112:33112 Imp <> e var
prf 33364:33379 AExp beval_iff_bevalR
R33397:33397 Coq.Init.Logic <> :type_scope:x_'<->'_x not
R33408:33413 Coq.Init.Logic <> :type_scope:x_'<->'_x not
R33398:33403 Imp AExp bevalR ind
R33407:33407 Imp <> b var
R33405:33405 Imp <> e var
R33421:33423 Coq.Init.Logic <> :type_scope:x_'='_x not
R33414:33418 Imp AExp beval def
R33420:33420 Imp <> e var
R33424:33424 Imp <> b var
R33587:33602 Imp AExp aeval_iff_aevalR thm
R33627:33642 Imp AExp aeval_iff_aevalR thm
R33587:33602 Imp AExp aeval_iff_aevalR thm
R33627:33642 Imp AExp aeval_iff_aevalR thm
R33587:33602 Imp AExp aeval_iff_aevalR thm
R33627:33642 Imp AExp aeval_iff_aevalR thm
R33811:33826 Imp AExp aeval_iff_aevalR thm
R33811:33826 Imp AExp aeval_iff_aevalR thm
R33811:33826 Imp AExp aeval_iff_aevalR thm
R33811:33826 Imp AExp aeval_iff_aevalR thm
R33811:33826 Imp AExp aeval_iff_aevalR thm
R33811:33826 Imp AExp aeval_iff_aevalR thm
R33811:33826 Imp AExp aeval_iff_aevalR thm
R34029:34032 Imp <> <> mod
mod 34856:34870 <> aevalR_division
ind 35009:35012 aevalR_division aexp
constr 35028:35031 aevalR_division ANum
constr 35051:35055 aevalR_division APlus
constr 35084:35089 aevalR_division AMinus
constr 35118:35122 aevalR_division AMult
constr 35151:35154 aevalR_division ADiv
R35042:35045 Imp <> aexp ind
R35035:35037 Coq.Init.Datatypes <> nat ind
R35075:35078 Imp <> aexp ind
R35067:35070 Imp <> aexp ind
R35059:35062 Imp <> aexp ind
R35109:35112 Imp <> aexp ind
R35101:35104 Imp <> aexp ind
R35093:35096 Imp <> aexp ind
R35142:35145 Imp <> aexp ind
R35134:35137 Imp <> aexp ind
R35126:35129 Imp <> aexp ind
R35174:35177 Imp <> aexp ind
R35166:35169 Imp <> aexp ind
R35158:35161 Imp <> aexp ind
ind 35434:35439 aevalR_division aevalR
constr 35470:35475 aevalR_division E_ANum
constr 35519:35525 aevalR_division E_APlus
constr 35630:35637 aevalR_division E_AMinus
constr 35743:35749 aevalR_division E_AMult
constr 35855:35860 aevalR_division E_ADiv
R35451:35453 Coq.Init.Datatypes <> nat ind
R35443:35446 Imp aevalR_division aexp ind
R35999:36004 Imp <> aevalR ind
R35489:35491 Coq.Init.Datatypes <> nat ind
R35501:35501 Imp aevalR_division :type_scope:x_'||'_x not
R35508:35512 Imp aevalR_division :type_scope:x_'||'_x not
R35502:35505 Imp aevalR_division ANum constr
R35507:35507 Imp <> n var
R35513:35513 Imp <> n var
R35544:35547 Imp aevalR_division aexp ind
R35559:35561 Coq.Init.Datatypes <> nat ind
R35599:35599 Imp aevalR_division :type_scope:x_'||'_x not
R35611:35616 Imp aevalR_division :type_scope:x_'||'_x not
R35624:35624 Imp aevalR_division :type_scope:x_'||'_x not
R35600:35604 Imp aevalR_division APlus constr
R35609:35610 Imp <> a2 var
R35606:35607 Imp <> a1 var
R35619:35621 Coq.Init.Peano <> :nat_scope:x_'+'_x not
R35617:35618 Imp <> n1 var
R35622:35623 Imp <> n2 var
R35588:35591 Imp aevalR_division :type_scope:x_'||'_x not
R35586:35587 Imp <> a2 var
R35592:35593 Imp <> n2 var
R35574:35577 Imp aevalR_division :type_scope:x_'||'_x not
R35572:35573 Imp <> a1 var
R35578:35579 Imp <> n1 var
R35656:35659 Imp aevalR_division aexp ind
R35671:35673 Coq.Init.Datatypes <> nat ind
R35711:35711 Imp aevalR_division :type_scope:x_'||'_x not
R35724:35729 Imp aevalR_division :type_scope:x_'||'_x not
R35737:35737 Imp aevalR_division :type_scope:x_'||'_x not
R35712:35717 Imp aevalR_division AMinus constr
R35722:35723 Imp <> a2 var
R35719:35720 Imp <> a1 var
R35732:35734 Coq.Init.Peano <> :nat_scope:x_'-'_x not
R35730:35731 Imp <> n1 var
R35735:35736 Imp <> n2 var
R35700:35703 Imp aevalR_division :type_scope:x_'||'_x not
R35698:35699 Imp <> a2 var
R35704:35705 Imp <> n2 var
R35686:35689 Imp aevalR_division :type_scope:x_'||'_x not
R35684:35685 Imp <> a1 var
R35690:35691 Imp <> n1 var
R35769:35772 Imp aevalR_division aexp ind
R35784:35786 Coq.Init.Datatypes <> nat ind
R35824:35824 Imp aevalR_division :type_scope:x_'||'_x not
R35836:35841 Imp aevalR_division :type_scope:x_'||'_x not
R35849:35849 Imp aevalR_division :type_scope:x_'||'_x not
R35825:35829 Imp aevalR_division AMult constr
R35834:35835 Imp <> a2 var
R35831:35832 Imp <> a1 var
R35844:35846 Coq.Init.Peano <> :nat_scope:x_'*'_x not
R35842:35843 Imp <> n1 var
R35847:35848 Imp <> n2 var
R35813:35816 Imp aevalR_division :type_scope:x_'||'_x not
R35811:35812 Imp <> a2 var
R35817:35818 Imp <> n2 var
R35799:35802 Imp aevalR_division :type_scope:x_'||'_x not
R35797:35798 Imp <> a1 var
R35803:35804 Imp <> n1 var
R35880:35883 Imp aevalR_division aexp ind
R35897:35899 Coq.Init.Datatypes <> nat ind
R35958:35958 Imp aevalR_division :type_scope:x_'||'_x not
R35969:35973 Imp aevalR_division :type_scope:x_'||'_x not
R35959:35962 Imp aevalR_division ADiv constr
R35967:35968 Imp <> a2 var
R35964:35965 Imp <> a1 var
R35974:35975 Imp <> n3 var
R35948:35950 Coq.Init.Logic <> :type_scope:x_'='_x not
R35938:35941 Coq.Init.Peano <> mult def
R35946:35947 Imp <> n3 var
R35943:35944 Imp <> n2 var
R35951:35952 Imp <> n1 var
R35926:35929 Imp aevalR_division :type_scope:x_'||'_x not
R35924:35925 Imp <> a2 var
R35930:35931 Imp <> n2 var
R35912:35915 Imp aevalR_division :type_scope:x_'||'_x not
R35910:35911 Imp <> a1 var
R35916:35917 Imp <> n1 var
R35999:36004 Imp aevalR_division aevalR ind
not 35984 aevalR_division :type_scope:x_'||'_x
R36030:36044 Imp <> <> mod
mod 36054:36068 <> aevalR_extended
ind 36253:36256 aevalR_extended aexp
constr 36272:36275 aevalR_extended AAny
constr 36322:36325 aevalR_extended ANum
constr 36345:36349 aevalR_extended APlus
constr 36378:36383 aevalR_extended AMinus
constr 36412:36416 aevalR_extended AMult
R36280:36283 Imp <> aexp ind
R36336:36339 Imp <> aexp ind
R36329:36331 Coq.Init.Datatypes <> nat ind
R36369:36372 Imp <> aexp ind
R36361:36364 Imp <> aexp ind
R36353:36356 Imp <> aexp ind
R36403:36406 Imp <> aexp ind
R36395:36398 Imp <> aexp ind
R36387:36390 Imp <> aexp ind
R36436:36439 Imp <> aexp ind
R36428:36431 Imp <> aexp ind
R36420:36423 Imp <> aexp ind
ind 36632:36637 aevalR_extended aevalR
constr 36668:36672 aevalR_extended E_Any
constr 36743:36748 aevalR_extended E_ANum
constr 36792:36798 aevalR_extended E_APlus
constr 36903:36910 aevalR_extended E_AMinus
constr 37016:37022 aevalR_extended E_AMult
R36649:36651 Coq.Init.Datatypes <> nat ind
R36641:36644 Imp aevalR_extended aexp ind
R37146:37151 Imp <> aevalR ind
R36686:36688 Coq.Init.Datatypes <> nat ind
R36702:36705 Imp aevalR_extended :type_scope:x_'||'_x not
R36698:36701 Imp aevalR_extended AAny constr
R36706:36706 Imp <> n var
R36762:36764 Coq.Init.Datatypes <> nat ind
R36774:36774 Imp aevalR_extended :type_scope:x_'||'_x not
R36781:36785 Imp aevalR_extended :type_scope:x_'||'_x not
R36775:36778 Imp aevalR_extended ANum constr
R36780:36780 Imp <> n var
R36786:36786 Imp <> n var
R36817:36820 Imp aevalR_extended aexp ind
R36832:36834 Coq.Init.Datatypes <> nat ind
R36872:36872 Imp aevalR_extended :type_scope:x_'||'_x not
R36884:36889 Imp aevalR_extended :type_scope:x_'||'_x not
R36897:36897 Imp aevalR_extended :type_scope:x_'||'_x not
R36873:36877 Imp aevalR_extended APlus constr
R36882:36883 Imp <> a2 var
R36879:36880 Imp <> a1 var
R36892:36894 Coq.Init.Peano <> :nat_scope:x_'+'_x not
R36890:36891 Imp <> n1 var
R36895:36896 Imp <> n2 var
R36861:36864 Imp aevalR_extended :type_scope:x_'||'_x not
R36859:36860 Imp <> a2 var
R36865:36866 Imp <> n2 var
R36847:36850 Imp aevalR_extended :type_scope:x_'||'_x not
R36845:36846 Imp <> a1 var
R36851:36852 Imp <> n1 var
R36929:36932 Imp aevalR_extended aexp ind
R36944:36946 Coq.Init.Datatypes <> nat ind
R36984:36984 Imp aevalR_extended :type_scope:x_'||'_x not
R36997:37002 Imp aevalR_extended :type_scope:x_'||'_x not
R37010:37010 Imp aevalR_extended :type_scope:x_'||'_x not
R36985:36990 Imp aevalR_extended AMinus constr
R36995:36996 Imp <> a2 var
R36992:36993 Imp <> a1 var
R37005:37007 Coq.Init.Peano <> :nat_scope:x_'-'_x not
R37003:37004 Imp <> n1 var
R37008:37009 Imp <> n2 var
R36973:36976 Imp aevalR_extended :type_scope:x_'||'_x not
R36971:36972 Imp <> a2 var
R36977:36978 Imp <> n2 var
R36959:36962 Imp aevalR_extended :type_scope:x_'||'_x not
R36957:36958 Imp <> a1 var
R36963:36964 Imp <> n1 var
R37042:37045 Imp aevalR_extended aexp ind
R37057:37059 Coq.Init.Datatypes <> nat ind
R37097:37097 Imp aevalR_extended :type_scope:x_'||'_x not
R37109:37114 Imp aevalR_extended :type_scope:x_'||'_x not
R37122:37122 Imp aevalR_extended :type_scope:x_'||'_x not
R37098:37102 Imp aevalR_extended AMult constr
R37107:37108 Imp <> a2 var
R37104:37105 Imp <> a1 var
R37117:37119 Coq.Init.Peano <> :nat_scope:x_'*'_x not
R37115:37116 Imp <> n1 var
R37120:37121 Imp <> n2 var
R37086:37089 Imp aevalR_extended :type_scope:x_'||'_x not
R37084:37085 Imp <> a2 var
R37090:37091 Imp <> n2 var
R37072:37075 Imp aevalR_extended :type_scope:x_'||'_x not
R37070:37071 Imp <> a1 var
R37076:37077 Imp <> n1 var
R37146:37151 Imp aevalR_extended aevalR ind
not 37131 aevalR_extended :type_scope:x_'||'_x
R37177:37191 Imp <> <> mod
mod 38023:38024 <> Id
ind 38213:38214 Id id
constr 38228:38229 Id Id
R38240:38241 Imp <> id ind
R38233:38235 Coq.Init.Datatypes <> nat ind
prf 38253:38261 Id eq_id_dec
R38282:38283 Imp Id id ind
R38286:38286 Coq.Init.Specif <> :type_scope:'{'_x_'}'_'+'_'{'_x_'}' not
R38296:38300 Coq.Init.Specif <> :type_scope:'{'_x_'}'_'+'_'{'_x_'}' not
R38311:38311 Coq.Init.Specif <> :type_scope:'{'_x_'}'_'+'_'{'_x_'}' not
R38290:38292 Coq.Init.Logic <> :type_scope:x_'='_x not
R38287:38289 Imp <> id1 var
R38293:38295 Imp <> id2 var
R38304:38307 Coq.Init.Logic <> :type_scope:x_'<>'_x not
R38301:38303 Imp <> id1 var
R38308:38310 Imp <> id2 var
R38400:38409 Coq.Arith.Peano_dec <> eq_nat_dec thm
R38400:38409 Coq.Arith.Peano_dec <> eq_nat_dec thm
prf 38683:38687 Id eq_id
R38714:38714 Imp <> T var
R38733:38733 Coq.Init.Logic <> :type_scope:x_'='_x not
R38764:38767 Coq.Init.Logic <> :type_scope:x_'='_x not
R38737:38745 Imp Id eq_id_dec thm
R38749:38749 Imp <> x var
R38747:38747 Imp <> x var
R38763:38763 Imp <> q var
R38756:38756 Imp <> p var
R38768:38768 Imp <> p var
R38802:38810 Imp Id eq_id_dec thm
R38802:38810 Imp Id eq_id_dec thm
R38893:38910 SfLib <> ex_falso_quodlibet thm
R38893:38910 SfLib <> ex_falso_quodlibet thm
prf 38995:39000 Id neq_id
R39029:39029 Imp <> T var
R39059:39059 Coq.Init.Logic <> :type_scope:x_'='_x not
R39090:39093 Coq.Init.Logic <> :type_scope:x_'='_x not
R39063:39071 Imp Id eq_id_dec thm
R39075:39075 Imp <> y var
R39073:39073 Imp <> x var
R39089:39089 Imp <> q var
R39082:39082 Imp <> p var
R39094:39094 Imp <> q var
R39034:39037 Coq.Init.Logic <> :type_scope:x_'<>'_x not
R39033:39033 Imp <> x var
R39038:39038 Imp <> y var
R39127:39135 Imp Id eq_id_dec thm
R39127:39135 Imp Id eq_id_dec thm
R39169:39186 SfLib <> ex_falso_quodlibet thm
R39169:39186 SfLib <> ex_falso_quodlibet thm
R39262:39263 Imp <> <> mod
def 39981:39985 <> state
R39996:39998 Coq.Init.Datatypes <> nat ind
R39990:39991 SfLib <> id ind
def 40013:40023 <> empty_state
R40027:40031 Imp <> state def
def 40062:40067 <> update
R40075:40079 Imp <> state def
R40087:40088 SfLib <> id ind
R40096:40098 Coq.Init.Datatypes <> nat ind
R40103:40107 Imp <> state def
R40127:40135 SfLib <> eq_id_dec thm
R40139:40140 Imp <> x' var
R40137:40137 Imp <> x var
R40154:40155 Imp <> st var
R40157:40158 Imp <> x' var
R40147:40147 Imp <> n var
prf 40302:40310 <> update_eq
R40348:40350 Coq.Init.Logic <> :type_scope:x_'='_x not
R40332:40337 Imp <> update def
R40344:40344 Imp <> n var
R40342:40342 Imp <> x var
R40339:40340 Imp <> st var
R40347:40347 Imp <> x var
R40351:40351 Imp <> n var
R40384:40388 SfLib <> eq_id thm
R40384:40388 SfLib <> eq_id thm
prf 40457:40466 <> update_neq
R40548:40551 Coq.Init.Logic <> :type_scope:x_'='_x not
R40557:40557 Coq.Init.Logic <> :type_scope:x_'='_x not
R40530:40535 Imp <> update def
R40543:40543 Imp <> n var
R40540:40541 Imp <> x2 var
R40537:40538 Imp <> st var
R40546:40547 Imp <> x1 var
R40552:40553 Imp <> st var
R40555:40556 Imp <> x1 var
R40493:40496 Coq.Init.Logic <> :type_scope:x_'<>'_x not
R40491:40492 Imp <> x2 var
R40497:40498 Imp <> x1 var
R40599:40604 SfLib <> neq_id prfax
R40599:40604 SfLib <> neq_id prfax
prf 40802:40815 <> update_example
R40829:40831 Coq.Init.Datatypes <> nat ind
R40873:40875 Coq.Init.Logic <> :type_scope:x_'='_x not
R40838:40843 Imp <> update def
R40864:40864 Imp <> n var
R40858:40859 SfLib <> Id constr
R40845:40855 Imp <> empty_state def
R40868:40869 SfLib <> Id constr
R40904:40909 SfLib <> neq_id prfax
R40904:40909 SfLib <> neq_id prfax
prf 40959:40965 <> neq_sym
R40994:40994 Imp <> X var
R41011:41014 Coq.Init.Logic <> :type_scope:x_'<>'_x not
R41010:41010 Imp <> y var
R41015:41015 Imp <> x var
R41001:41004 Coq.Init.Logic <> :type_scope:x_'<>'_x not
R41000:41000 Imp <> x var
R41005:41005 Imp <> y var
R41062:41064 Coq.Init.Logic <> not def
R41087:41092 Coq.Init.Logic <> eq_sym thm
R41087:41092 Coq.Init.Logic <> eq_sym thm
prf 41195:41207 <> update_shadow
R41236:41240 Imp <> state def
R41283:41285 Coq.Init.Logic <> :type_scope:x_'='_x not
R41248:41253 Imp <> update def
R41277:41278 Imp <> n2 var
R41274:41275 Imp <> x2 var
R41257:41262 Imp <> update def
R41270:41271 Imp <> n1 var
R41267:41268 Imp <> x2 var
R41264:41265 Imp <> st var
R41281:41282 Imp <> x1 var
R41287:41292 Imp <> update def
R41300:41301 Imp <> n2 var
R41297:41298 Imp <> x2 var
R41294:41295 Imp <> st var
R41304:41305 Imp <> x1 var
R41352:41360 SfLib <> eq_id_dec thm
R41352:41360 SfLib <> eq_id_dec thm
R41432:41440 Imp <> update_eq thm
R41432:41440 Imp <> update_eq thm
R41451:41459 Imp <> update_eq thm
R41451:41459 Imp <> update_eq thm
R41514:41523 Imp <> update_neq thm
R41567:41573 Imp <> neq_sym thm
R41514:41523 Imp <> update_neq thm
R41514:41523 Imp <> update_neq thm
R41514:41523 Imp <> update_neq thm
R41514:41523 Imp <> update_neq thm
R41514:41523 Imp <> update_neq thm
R41514:41523 Imp <> update_neq thm
R41514:41523 Imp <> update_neq thm
R41567:41573 Imp <> neq_sym thm
R41567:41573 Imp <> neq_sym thm
R41567:41573 Imp <> neq_sym thm
prf 41657:41667 <> update_same
R41693:41697 Imp <> state def
R41739:41741 Coq.Init.Logic <> :type_scope:x_'='_x not
R41720:41725 Imp <> update def
R41733:41734 Imp <> n1 var
R41730:41731 Imp <> x1 var
R41727:41728 Imp <> st var
R41737:41738 Imp <> x2 var
R41742:41743 Imp <> st var
R41745:41746 Imp <> x2 var
R41708:41710 Coq.Init.Logic <> :type_scope:x_'='_x not
R41703:41704 Imp <> st var
R41706:41707 Imp <> x1 var
R41711:41712 Imp <> n1 var
R41792:41800 SfLib <> eq_id_dec thm
R41792:41800 SfLib <> eq_id_dec thm
R41861:41869 Imp <> update_eq thm
R41861:41869 Imp <> update_eq thm
R41901:41910 Imp <> update_neq thm
R41901:41910 Imp <> update_neq thm
prf 41996:42009 <> update_permute
R42091:42093 Coq.Init.Logic <> :type_scope:x_'='_x not
R42057:42062 Imp <> update def
R42085:42086 Imp <> n2 var
R42082:42083 Imp <> x1 var
R42065:42070 Imp <> update def
R42078:42079 Imp <> n1 var
R42075:42076 Imp <> x2 var
R42072:42073 Imp <> st var
R42089:42090 Imp <> x3 var
R42095:42100 Imp <> update def
R42123:42124 Imp <> n1 var
R42120:42121 Imp <> x2 var
R42103:42108 Imp <> update def
R42116:42117 Imp <> n2 var
R42113:42114 Imp <> x1 var
R42110:42111 Imp <> st var
R42127:42128 Imp <> x3 var
R42043:42046 Coq.Init.Logic <> :type_scope:x_'<>'_x not
R42041:42042 Imp <> x2 var
R42047:42048 Imp <> x1 var
R42183:42191 SfLib <> eq_id_dec thm
R42183:42191 SfLib <> eq_id_dec thm
R42253:42261 SfLib <> eq_id_dec thm
R42253:42261 SfLib <> eq_id_dec thm
R42333:42335 Coq.Init.Logic <> :type_scope:x_'='_x not
R42333:42335 Coq.Init.Logic <> :type_scope:x_'='_x not
R42347:42354 Coq.Init.Logic <> eq_trans thm
R42347:42354 Coq.Init.Logic <> eq_trans thm
R42384:42389 Coq.Init.Logic <> eq_sym thm
R42384:42389 Coq.Init.Logic <> eq_sym thm
R42503:42508 Imp <> update def
R42519:42523 SfLib <> eq_id thm
R42519:42523 SfLib <> eq_id thm
R42534:42539 SfLib <> neq_id prfax
R42534:42539 SfLib <> neq_id prfax
R42556:42560 SfLib <> eq_id thm
R42556:42560 SfLib <> eq_id thm
R42629:42637 SfLib <> eq_id_dec thm
R42629:42637 SfLib <> eq_id_dec thm
R42717:42726 Imp <> update_neq thm
R42717:42726 Imp <> update_neq thm
R42737:42745 Imp <> update_eq thm
R42737:42745 Imp <> update_eq thm
R42756:42764 Imp <> update_eq thm
R42756:42764 Imp <> update_eq thm
R42844:42853 Imp <> update_neq thm
R42844:42853 Imp <> update_neq thm
R42844:42853 Imp <> update_neq thm
R42844:42853 Imp <> update_neq thm
R42844:42853 Imp <> update_neq thm
R42844:42853 Imp <> update_neq thm
R42844:42853 Imp <> update_neq thm
R42844:42853 Imp <> update_neq thm
R42844:42853 Imp <> update_neq thm
R42844:42853 Imp <> update_neq thm
ind 43125:43128 <> aexp
constr 43144:43147 <> ANum
constr 43167:43169 <> AId
constr 43220:43224 <> APlus
constr 43253:43258 <> AMinus
constr 43287:43291 <> AMult
R43158:43161 Imp <> aexp ind
R43151:43153 Coq.Init.Datatypes <> nat ind
R43179:43182 Imp <> aexp ind
R43173:43174 SfLib <> id ind
R43244:43247 Imp <> aexp ind
R43236:43239 Imp <> aexp ind
R43228:43231 Imp <> aexp ind
R43278:43281 Imp <> aexp ind
R43270:43273 Imp <> aexp ind
R43262:43265 Imp <> aexp ind
R43311:43314 Imp <> aexp ind
R43303:43306 Imp <> aexp ind
R43295:43298 Imp <> aexp ind
def 43606:43606 <> X
R43610:43611 SfLib <> id ind
R43616:43617 SfLib <> Id constr
def 43633:43633 <> Y
R43637:43638 SfLib <> id ind
R43643:43644 SfLib <> Id constr
def 43660:43660 <> Z
R43664:43665 SfLib <> id ind
R43670:43671 SfLib <> Id constr
ind 44039:44042 <> bexp
constr 44058:44062 <> BTrue
constr 44075:44080 <> BFalse
constr 44093:44095 <> BEq
constr 44124:44126 <> BLe
constr 44155:44158 <> BNot
constr 44179:44182 <> BAnd
R44066:44069 Imp <> bexp ind
R44084:44087 Imp <> bexp ind
R44115:44118 Imp <> bexp ind
R44107:44110 Imp <> aexp ind
R44099:44102 Imp <> aexp ind
R44146:44149 Imp <> bexp ind
R44138:44141 Imp <> aexp ind
R44130:44133 Imp <> aexp ind
R44170:44173 Imp <> bexp ind
R44162:44165 Imp <> bexp ind
R44202:44205 Imp <> bexp ind
R44194:44197 Imp <> bexp ind
R44186:44189 Imp <> bexp ind
def 44593:44597 <> aeval
R44605:44609 Imp <> state def
R44617:44620 Imp <> aexp ind
R44625:44627 Coq.Init.Datatypes <> nat ind
R44640:44640 Imp <> a var
R44651:44654 Imp <> ANum constr
R44667:44669 Imp <> AId constr
R44676:44677 Imp <> st var
R44741:44745 Imp <> APlus constr
R44756:44756 Coq.Init.Peano <> :nat_scope:x_'+'_x not
R44768:44772 Coq.Init.Peano <> :nat_scope:x_'+'_x not
R44784:44784 Coq.Init.Peano <> :nat_scope:x_'+'_x not
R44757:44761 Imp <> aeval def
R44763:44764 Imp <> st var
R44773:44777 Imp <> aeval def
R44779:44780 Imp <> st var
R44790:44795 Imp <> AMinus constr
R44807:44807 Coq.Init.Peano <> :nat_scope:x_'-'_x not
R44819:44823 Coq.Init.Peano <> :nat_scope:x_'-'_x not
R44835:44835 Coq.Init.Peano <> :nat_scope:x_'-'_x not
R44808:44812 Imp <> aeval def
R44814:44815 Imp <> st var
R44824:44828 Imp <> aeval def
R44830:44831 Imp <> st var
R44841:44845 Imp <> AMult constr
R44856:44856 Coq.Init.Peano <> :nat_scope:x_'*'_x not
R44868:44872 Coq.Init.Peano <> :nat_scope:x_'*'_x not
R44884:44884 Coq.Init.Peano <> :nat_scope:x_'*'_x not
R44857:44861 Imp <> aeval def
R44863:44864 Imp <> st var
R44873:44877 Imp <> aeval def
R44879:44880 Imp <> st var
def 44903:44907 <> beval
R44915:44919 Imp <> state def
R44927:44930 Imp <> bexp ind
R44935:44938 Coq.Init.Datatypes <> bool ind
R44951:44951 Imp <> b var
R44962:44966 Imp <> BTrue constr
R44977:44980 Coq.Init.Datatypes <> true constr
R44986:44991 Imp <> BFalse constr
R45001:45005 Coq.Init.Datatypes <> false constr
R45011:45013 Imp <> BEq constr
R45026:45032 Coq.Arith.EqNat <> beq_nat def
R45049:45053 Imp <> aeval def
R45055:45056 Imp <> st var
R45035:45039 Imp <> aeval def
R45041:45042 Imp <> st var
R45066:45068 Imp <> BLe constr
R45081:45087 SfLib <> ble_nat def
R45104:45108 Imp <> aeval def
R45110:45111 Imp <> st var
R45090:45094 Imp <> aeval def
R45096:45097 Imp <> st var
R45121:45124 Imp <> BNot constr
R45136:45139 Coq.Init.Datatypes <> negb def
R45142:45146 Imp <> beval def
R45148:45149 Imp <> st var
R45159:45162 Imp <> BAnd constr
R45174:45177 Coq.Init.Datatypes <> andb def
R45194:45198 Imp <> beval def
R45200:45201 Imp <> st var
R45180:45184 Imp <> beval def
R45186:45187 Imp <> st var
def 45223:45227 <> aexp1
R45313:45317 Coq.Init.Logic <> :type_scope:x_'='_x not
R45233:45237 Imp <> aeval def
R45273:45277 Imp <> APlus constr
R45289:45293 Imp <> AMult constr
R45304:45307 Imp <> ANum constr
R45296:45298 Imp <> AId constr
R45300:45300 Imp <> X def
R45280:45283 Imp <> ANum constr
R45240:45245 Imp <> update def
R45259:45259 Imp <> X def
R45247:45257 Imp <> empty_state def
def 45356:45360 <> bexp1
R45447:45451 Coq.Init.Logic <> :type_scope:x_'='_x not
R45366:45370 Imp <> beval def
R45406:45409 Imp <> BAnd constr
R45418:45421 Imp <> BNot constr
R45424:45426 Imp <> BLe constr
R45437:45440 Imp <> ANum constr
R45429:45431 Imp <> AId constr
R45433:45433 Imp <> X def
R45411:45415 Imp <> BTrue constr
R45373:45378 Imp <> update def
R45392:45392 Imp <> X def
R45380:45390 Imp <> empty_state def
R45452:45455 Coq.Init.Datatypes <> true constr
ind 46298:46300 <> com
constr 46316:46320 <> CSkip
constr 46332:46335 <> CAss
constr 46361:46364 <> CSeq
constr 46390:46392 <> CIf
constr 46426:46431 <> CWhile
R46324:46326 Imp <> com ind
R46353:46355 Imp <> com ind
R46345:46348 Imp <> aexp ind
R46339:46340 SfLib <> id ind
R46382:46384 Imp <> com ind
R46375:46377 Imp <> com ind
R46368:46370 Imp <> com ind
R46418:46420 Imp <> com ind
R46411:46413 Imp <> com ind
R46404:46406 Imp <> com ind
R46396:46399 Imp <> bexp ind
R46450:46452 Imp <> com ind
R46443:46445 Imp <> com ind
R46435:46438 Imp <> bexp ind
R47103:47107 Imp <> CSkip constr
not 47089 <> ::'SKIP'
R47137:47140 Imp <> CAss constr
not 47119 <> ::x_'::='_x
R47188:47191 Imp <> CSeq constr
not 47171 <> ::x_';;'_x
R47276:47281 Imp <> CWhile constr
not 47245 <> ::'WHILE'_x_'DO'_x_'END'
R47375:47377 Imp <> CIf constr
not 47333 <> ::'IFB'_x_'THEN'_x_'ELSE'_x_'FI'
def 47539:47549 <> fact_in_coq
R47553:47555 Imp <> com ind
R47573:47577 Imp <> ::x_';;'_x not
R47563:47567 Imp <> ::x_'::='_x not
R47562:47562 Imp <> Z def
R47568:47570 Imp <> AId constr
R47572:47572 Imp <> X def
R47590:47594 Imp <> ::x_';;'_x not
R47579:47583 Imp <> ::x_'::='_x not
R47578:47578 Imp <> Y def
R47584:47587 Imp <> ANum constr
R47595:47600 Imp <> ::'WHILE'_x_'DO'_x_'END' not
R47628:47635 Imp <> ::'WHILE'_x_'DO'_x_'END' not
R47699:47704 Imp <> ::'WHILE'_x_'DO'_x_'END' not
R47601:47604 Imp <> BNot constr
R47607:47609 Imp <> BEq constr
R47620:47623 Imp <> ANum constr
R47612:47614 Imp <> AId constr
R47616:47616 Imp <> Z def
R47663:47669 Imp <> ::x_';;'_x not
R47637:47641 Imp <> ::x_'::='_x not
R47636:47636 Imp <> Y def
R47642:47646 Imp <> AMult constr
R47657:47659 Imp <> AId constr
R47661:47661 Imp <> Z def
R47649:47651 Imp <> AId constr
R47653:47653 Imp <> Y def
R47671:47675 Imp <> ::x_'::='_x not
R47670:47670 Imp <> Z def
R47676:47681 Imp <> AMinus constr
R47692:47695 Imp <> ANum constr
R47684:47686 Imp <> AId constr
R47688:47688 Imp <> Z def
def 47821:47825 <> plus2
R47829:47831 Imp <> com ind
R47839:47844 Imp <> ::x_'::='_x not
R47867:47867 Imp <> ::x_'::='_x not
R47838:47838 Imp <> X def
R47845:47849 Imp <> APlus constr
R47860:47863 Imp <> ANum constr
R47852:47854 Imp <> AId constr
R47856:47856 Imp <> X def
def 47882:47891 <> XtimesYinZ
R47895:47897 Imp <> com ind
R47905:47910 Imp <> ::x_'::='_x not
R47932:47932 Imp <> ::x_'::='_x not
R47904:47904 Imp <> Z def
R47911:47915 Imp <> AMult constr
R47926:47928 Imp <> AId constr
R47930:47930 Imp <> Y def
R47918:47920 Imp <> AId constr
R47922:47922 Imp <> X def
def 47947:47966 <> subtract_slowly_body
R47970:47972 Imp <> com ind
R48008:48013 Imp <> ::x_';;'_x not
R47980:47984 Imp <> ::x_'::='_x not
R47979:47979 Imp <> Z def
R47985:47990 Imp <> AMinus constr
R48001:48004 Imp <> ANum constr
R47993:47995 Imp <> AId constr
R47997:47997 Imp <> Z def
R48015:48019 Imp <> ::x_'::='_x not
R48014:48014 Imp <> X def
R48020:48025 Imp <> AMinus constr
R48036:48039 Imp <> ANum constr
R48028:48030 Imp <> AId constr
R48032:48032 Imp <> X def
def 48076:48090 <> subtract_slowly
R48094:48096 Imp <> com ind
R48103:48108 Imp <> ::'WHILE'_x_'DO'_x_'END' not
R48136:48143 Imp <> ::'WHILE'_x_'DO'_x_'END' not
R48164:48169 Imp <> ::'WHILE'_x_'DO'_x_'END' not
R48109:48112 Imp <> BNot constr
R48115:48117 Imp <> BEq constr
R48128:48131 Imp <> ANum constr
R48120:48122 Imp <> AId constr
R48124:48124 Imp <> X def
R48144:48163 Imp <> subtract_slowly_body def
def 48184:48207 <> subtract_3_from_5_slowly
R48211:48213 Imp <> com ind
R48232:48237 Imp <> ::x_';;'_x not
R48221:48225 Imp <> ::x_'::='_x not
R48220:48220 Imp <> X def
R48226:48229 Imp <> ANum constr
R48250:48255 Imp <> ::x_';;'_x not
R48239:48243 Imp <> ::x_'::='_x not
R48238:48238 Imp <> Z def
R48244:48247 Imp <> ANum constr
R48256:48270 Imp <> subtract_slowly def
def 48316:48319 <> loop
R48323:48325 Imp <> com ind
R48332:48337 Imp <> ::'WHILE'_x_'DO'_x_'END' not
R48343:48350 Imp <> ::'WHILE'_x_'DO'_x_'END' not
R48355:48360 Imp <> ::'WHILE'_x_'DO'_x_'END' not
R48338:48342 Imp <> BTrue constr
R48351:48354 Imp <> ::'SKIP' not
def 48852:48869 <> ceval_fun_no_while
R48877:48881 Imp <> state def
R48889:48891 Imp <> com ind
R48896:48900 Imp <> state def
R48913:48913 Imp <> c var
R48926:48929 Imp <> ::'SKIP' not
R48942:48943 Imp <> st var
R48952:48956 Imp <> ::x_'::='_x not
R48971:48976 Imp <> update def
R48984:48988 Imp <> aeval def
R48990:48991 Imp <> st var
R48978:48979 Imp <> st var
R49005:49008 Imp <> ::x_';;'_x not
R49034:49051 Imp <> ceval_fun_no_while def
R49053:49054 Imp <> st var
R49070:49087 Imp <> ceval_fun_no_while def
R49089:49091 Imp <> st' var
R49102:49105 Imp <> ::'IFB'_x_'THEN'_x_'ELSE'_x_'FI' not
R49107:49112 Imp <> ::'IFB'_x_'THEN'_x_'ELSE'_x_'FI' not
R49115:49120 Imp <> ::'IFB'_x_'THEN'_x_'ELSE'_x_'FI' not
R49123:49125 Imp <> ::'IFB'_x_'THEN'_x_'ELSE'_x_'FI' not
R49142:49146 Imp <> beval def
R49148:49149 Imp <> st var
R49209:49226 Imp <> ceval_fun_no_while def
R49228:49229 Imp <> st var
R49169:49186 Imp <> ceval_fun_no_while def
R49188:49189 Imp <> st var
R49240:49245 Imp <> ::'WHILE'_x_'DO'_x_'END' not
R49247:49250 Imp <> ::'WHILE'_x_'DO'_x_'END' not
R49252:49255 Imp <> ::'WHILE'_x_'DO'_x_'END' not
R49268:49269 Imp <> st var
ind 53256:53260 <> ceval
constr 53301:53306 <> E_Skip
constr 53347:53351 <> E_Ass
constr 53444:53448 <> E_Seq
constr 53563:53570 <> E_IfTrue
constr 53697:53705 <> E_IfFalse
constr 53833:53842 <> E_WhileEnd
constr 53929:53939 <> E_WhileLoop
R53280:53284 Imp <> state def
R53271:53275 Imp <> state def
R53264:53266 Imp <> com ind
R54131:54135 Imp <> ceval ind
R53331:53333 Imp <> ::x_'/'_x_'||'_x not
R53336:53339 Imp <> ::x_'/'_x_'||'_x not
R53327:53330 Imp <> ::'SKIP' not
R53334:53335 Imp <> st var
R53340:53341 Imp <> st var
R53405:53405 Imp <> ::x_'/'_x_'||'_x not
R53414:53417 Imp <> ::x_'/'_x_'||'_x not
R53420:53424 Imp <> ::x_'/'_x_'||'_x not
R53438:53438 Imp <> ::x_'/'_x_'||'_x not
R53407:53411 Imp <> ::x_'::='_x not
R53406:53406 Imp <> x var
R53412:53413 Imp <> a1 var
R53418:53419 Imp <> st var
R53425:53430 Imp <> update def
R53437:53437 Imp <> n var
R53435:53435 Imp <> x var
R53432:53433 Imp <> st var
R53391:53393 Coq.Init.Logic <> :type_scope:x_'='_x not
R53380:53384 Imp <> aeval def
R53389:53390 Imp <> a1 var
R53386:53387 Imp <> st var
R53394:53394 Imp <> n var
R53535:53535 Imp <> ::x_'/'_x_'||'_x not
R53544:53547 Imp <> ::x_'/'_x_'||'_x not
R53550:53553 Imp <> ::x_'/'_x_'||'_x not
R53538:53541 Imp <> ::x_';;'_x not
R53536:53537 Imp <> c1 var
R53542:53543 Imp <> c2 var
R53548:53549 Imp <> st var
R53554:53557 Imp <> st'' var
R53511:53513 Imp <> ::x_'/'_x_'||'_x not
R53517:53520 Imp <> ::x_'/'_x_'||'_x not
R53509:53510 Imp <> c2 var
R53514:53516 Imp <> st' var
R53521:53524 Imp <> st'' var
R53486:53488 Imp <> ::x_'/'_x_'||'_x not
R53491:53495 Imp <> ::x_'/'_x_'||'_x not
R53484:53485 Imp <> c1 var
R53489:53490 Imp <> st var
R53496:53498 Imp <> st' var
R53654:53654 Imp <> ::x_'/'_x_'||'_x not
R53679:53682 Imp <> ::x_'/'_x_'||'_x not
R53685:53688 Imp <> ::x_'/'_x_'||'_x not
R53655:53658 Imp <> ::'IFB'_x_'THEN'_x_'ELSE'_x_'FI' not
R53660:53665 Imp <> ::'IFB'_x_'THEN'_x_'ELSE'_x_'FI' not
R53668:53673 Imp <> ::'IFB'_x_'THEN'_x_'ELSE'_x_'FI' not
R53676:53678 Imp <> ::'IFB'_x_'THEN'_x_'ELSE'_x_'FI' not
R53659:53659 Imp <> b var
R53666:53667 Imp <> c1 var
R53674:53675 Imp <> c2 var
R53683:53684 Imp <> st var
R53689:53691 Imp <> st' var
R53632:53634 Imp <> ::x_'/'_x_'||'_x not
R53637:53640 Imp <> ::x_'/'_x_'||'_x not
R53630:53631 Imp <> c1 var
R53635:53636 Imp <> st var
R53641:53643 Imp <> st' var
R53613:53615 Coq.Init.Logic <> :type_scope:x_'='_x not
R53603:53607 Imp <> beval def
R53612:53612 Imp <> b var
R53609:53610 Imp <> st var
R53616:53619 Coq.Init.Datatypes <> true constr
R53790:53790 Imp <> ::x_'/'_x_'||'_x not
R53815:53818 Imp <> ::x_'/'_x_'||'_x not
R53821:53824 Imp <> ::x_'/'_x_'||'_x not
R53791:53794 Imp <> ::'IFB'_x_'THEN'_x_'ELSE'_x_'FI' not
R53796:53801 Imp <> ::'IFB'_x_'THEN'_x_'ELSE'_x_'FI' not
R53804:53809 Imp <> ::'IFB'_x_'THEN'_x_'ELSE'_x_'FI' not
R53812:53814 Imp <> ::'IFB'_x_'THEN'_x_'ELSE'_x_'FI' not
R53795:53795 Imp <> b var
R53802:53803 Imp <> c1 var
R53810:53811 Imp <> c2 var
R53819:53820 Imp <> st var
R53825:53827 Imp <> st' var
R53768:53770 Imp <> ::x_'/'_x_'||'_x not
R53773:53776 Imp <> ::x_'/'_x_'||'_x not
R53766:53767 Imp <> c2 var
R53771:53772 Imp <> st var
R53777:53779 Imp <> st' var
R53748:53750 Coq.Init.Logic <> :type_scope:x_'='_x not
R53738:53742 Imp <> beval def
R53747:53747 Imp <> b var
R53744:53745 Imp <> st var
R53751:53755 Coq.Init.Datatypes <> false constr
R53895:53895 Imp <> ::x_'/'_x_'||'_x not
R53912:53915 Imp <> ::x_'/'_x_'||'_x not
R53918:53921 Imp <> ::x_'/'_x_'||'_x not
R53896:53901 Imp <> ::'WHILE'_x_'DO'_x_'END' not
R53903:53906 Imp <> ::'WHILE'_x_'DO'_x_'END' not
R53908:53911 Imp <> ::'WHILE'_x_'DO'_x_'END' not
R53902:53902 Imp <> b var
R53907:53907 Imp <> c var
R53916:53917 Imp <> st var
R53922:53923 Imp <> st var
R53877:53879 Coq.Init.Logic <> :type_scope:x_'='_x not
R53867:53871 Imp <> beval def
R53876:53876 Imp <> b var
R53873:53874 Imp <> st var
R53880:53884 Coq.Init.Datatypes <> false constr
R54065:54065 Imp <> ::x_'/'_x_'||'_x not
R54082:54085 Imp <> ::x_'/'_x_'||'_x not
R54088:54091 Imp <> ::x_'/'_x_'||'_x not
R54066:54071 Imp <> ::'WHILE'_x_'DO'_x_'END' not
R54073:54076 Imp <> ::'WHILE'_x_'DO'_x_'END' not
R54078:54081 Imp <> ::'WHILE'_x_'DO'_x_'END' not
R54072:54072 Imp <> b var
R54077:54077 Imp <> c var
R54086:54087 Imp <> st var
R54092:54095 Imp <> st'' var
R54023:54023 Imp <> ::x_'/'_x_'||'_x not
R54040:54043 Imp <> ::x_'/'_x_'||'_x not
R54047:54050 Imp <> ::x_'/'_x_'||'_x not
R54024:54029 Imp <> ::'WHILE'_x_'DO'_x_'END' not
R54031:54034 Imp <> ::'WHILE'_x_'DO'_x_'END' not
R54036:54039 Imp <> ::'WHILE'_x_'DO'_x_'END' not
R54030:54030 Imp <> b var
R54035:54035 Imp <> c var
R54044:54046 Imp <> st' var
R54051:54054 Imp <> st'' var
R54001:54003 Imp <> ::x_'/'_x_'||'_x not
R54006:54009 Imp <> ::x_'/'_x_'||'_x not
R54000:54000 Imp <> c var
R54004:54005 Imp <> st var
R54010:54012 Imp <> st' var
R53983:53985 Coq.Init.Logic <> :type_scope:x_'='_x not
R53973:53977 Imp <> beval def
R53982:53982 Imp <> b var
R53979:53980 Imp <> st var
R53986:53989 Coq.Init.Datatypes <> true constr
R54131:54135 Imp <> ceval ind
not 54106 <> ::x_'/'_x_'||'_x
def 54657:54670 <> ceval_example1
R54677:54677 Imp <> ::x_'/'_x_'||'_x not
R54780:54786 Imp <> ::x_'/'_x_'||'_x not
R54798:54805 Imp <> ::x_'/'_x_'||'_x not
R54841:54841 Imp <> ::x_'/'_x_'||'_x not
R54690:54697 Imp <> ::x_';;'_x not
R54679:54683 Imp <> ::x_'::='_x not
R54678:54678 Imp <> X def
R54684:54687 Imp <> ANum constr
R54698:54701 Imp <> ::'IFB'_x_'THEN'_x_'ELSE'_x_'FI' not
R54722:54734 Imp <> ::'IFB'_x_'THEN'_x_'ELSE'_x_'FI' not
R54747:54759 Imp <> ::'IFB'_x_'THEN'_x_'ELSE'_x_'FI' not
R54772:54779 Imp <> ::'IFB'_x_'THEN'_x_'ELSE'_x_'FI' not
R54702:54704 Imp <> BLe constr
R54715:54718 Imp <> ANum constr
R54707:54709 Imp <> AId constr
R54711:54711 Imp <> X def
R54736:54740 Imp <> ::x_'::='_x not
R54735:54735 Imp <> Y def
R54741:54744 Imp <> ANum constr
R54761:54765 Imp <> ::x_'::='_x not
R54760:54760 Imp <> Z def
R54766:54769 Imp <> ANum constr
R54787:54797 Imp <> empty_state def
R54806:54811 Imp <> update def
R54838:54838 Imp <> Z def
R54814:54819 Imp <> update def
R54833:54833 Imp <> X def
R54821:54831 Imp <> empty_state def
R54917:54922 Imp <> update def
R54936:54936 Imp <> X def
R54924:54934 Imp <> empty_state def
R54905:54909 Imp <> E_Seq constr
R54917:54922 Imp <> update def
R54936:54936 Imp <> X def
R54924:54934 Imp <> empty_state def
R54905:54909 Imp <> E_Seq constr
R54981:54985 Imp <> E_Ass constr
R54981:54985 Imp <> E_Ass constr
R55032:55040 Imp <> E_IfFalse constr
R55032:55040 Imp <> E_IfFalse constr
R55074:55078 Imp <> E_Ass constr
R55074:55078 Imp <> E_Ass constr
def 55156:55169 <> ceval_example2
R55176:55176 Imp <> ::x_'/'_x_'||'_x not
R55219:55222 Imp <> ::x_'/'_x_'||'_x not
R55234:55242 Imp <> ::x_'/'_x_'||'_x not
R55291:55291 Imp <> ::x_'/'_x_'||'_x not
R55189:55191 Imp <> ::x_';;'_x not
R55178:55182 Imp <> ::x_'::='_x not
R55177:55177 Imp <> X def
R55183:55186 Imp <> ANum constr
R55204:55206 Imp <> ::x_';;'_x not
R55193:55197 Imp <> ::x_'::='_x not
R55192:55192 Imp <> Y def
R55198:55201 Imp <> ANum constr
R55208:55212 Imp <> ::x_'::='_x not
R55207:55207 Imp <> Z def
R55213:55216 Imp <> ANum constr
R55223:55233 Imp <> empty_state def
R55243:55248 Imp <> update def
R55288:55288 Imp <> Z def
R55251:55256 Imp <> update def
R55283:55283 Imp <> Y def
R55259:55264 Imp <> update def
R55278:55278 Imp <> X def
R55266:55276 Imp <> empty_state def
R55321:55326 Imp <> update def
R55340:55340 Imp <> X def
R55328:55338 Imp <> empty_state def
R55309:55313 Imp <> E_Seq constr
R55321:55326 Imp <> update def
R55340:55340 Imp <> X def
R55328:55338 Imp <> empty_state def
R55309:55313 Imp <> E_Seq constr
R55378:55382 Imp <> E_Ass constr
R55378:55382 Imp <> E_Ass constr
R55434:55439 Imp <> update def
R55466:55466 Imp <> Y def
R55442:55447 Imp <> update def
R55461:55461 Imp <> X def
R55449:55459 Imp <> empty_state def
R55422:55426 Imp <> E_Seq constr
R55434:55439 Imp <> update def
R55466:55466 Imp <> Y def
R55442:55447 Imp <> update def
R55461:55461 Imp <> X def
R55449:55459 Imp <> empty_state def
R55422:55426 Imp <> E_Seq constr
R55509:55513 Imp <> E_Ass constr
R55509:55513 Imp <> E_Ass constr
R55558:55562 Imp <> E_Ass constr
R55558:55562 Imp <> E_Ass constr
def 55893:55900 <> pup_to_n
R55904:55906 Imp <> com ind
R55925:55929 Imp <> ::x_';;'_x not
R55914:55918 Imp <> ::x_'::='_x not
R55913:55913 Imp <> Y def
R55919:55922 Imp <> ANum constr
R55930:55935 Imp <> ::'WHILE'_x_'DO'_x_'END' not
R55956:55963 Imp <> ::'WHILE'_x_'DO'_x_'END' not
R56031:56036 Imp <> ::'WHILE'_x_'DO'_x_'END' not
R55936:55938 Imp <> BLe constr
R55950:55952 Imp <> AId constr
R55954:55954 Imp <> X def
R55941:55944 Imp <> ANum constr
R55993:55999 Imp <> ::x_';;'_x not
R55965:55970 Imp <> ::x_'::='_x not
R55992:55992 Imp <> ::x_'::='_x not
R55964:55964 Imp <> Y def
R55971:55975 Imp <> APlus constr
R55986:55988 Imp <> AId constr
R55990:55990 Imp <> X def
R55978:55980 Imp <> AId constr
R55982:55982 Imp <> Y def
R56001:56006 Imp <> ::x_'::='_x not
R56030:56030 Imp <> ::x_'::='_x not
R56000:56000 Imp <> X def
R56007:56012 Imp <> AMinus constr
R56023:56026 Imp <> ANum constr
R56015:56017 Imp <> AId constr
R56019:56019 Imp <> X def
prf 56048:56061 <> pup_to_2_ceval
R56075:56078 Imp <> ::x_'/'_x_'||'_x not
R56101:56109 Imp <> ::x_'/'_x_'||'_x not
R56067:56074 Imp <> pup_to_n def
R56079:56084 Imp <> update def
R56098:56098 Imp <> X def
R56086:56096 Imp <> empty_state def
R56110:56115 Imp <> update def
R56200:56200 Imp <> X def
R56118:56123 Imp <> update def
R56195:56195 Imp <> Y def
R56126:56131 Imp <> update def
R56190:56190 Imp <> X def
R56134:56139 Imp <> update def
R56185:56185 Imp <> Y def
R56142:56147 Imp <> update def
R56180:56180 Imp <> Y def
R56150:56155 Imp <> update def
R56175:56175 Imp <> X def
R56157:56167 Imp <> empty_state def
R56232:56237 Imp <> update def
R56264:56264 Imp <> Y def
R56240:56245 Imp <> update def
R56259:56259 Imp <> X def
R56247:56257 Imp <> empty_state def
R56220:56224 Imp <> E_Seq constr
R56232:56237 Imp <> update def
R56264:56264 Imp <> Y def
R56240:56245 Imp <> update def
R56259:56259 Imp <> X def
R56247:56257 Imp <> empty_state def
R56220:56224 Imp <> E_Seq constr
R56297:56301 Imp <> E_Ass constr
R56297:56301 Imp <> E_Ass constr
R56361:56366 Imp <> update def
R56419:56419 Imp <> X def
R56369:56374 Imp <> update def
R56414:56414 Imp <> Y def
R56377:56382 Imp <> update def
R56409:56409 Imp <> Y def
R56385:56390 Imp <> update def
R56404:56404 Imp <> X def
R56392:56402 Imp <> empty_state def
R56343:56353 Imp <> E_WhileLoop constr
R56361:56366 Imp <> update def
R56419:56419 Imp <> X def
R56369:56374 Imp <> update def
R56414:56414 Imp <> Y def
R56377:56382 Imp <> update def
R56409:56409 Imp <> Y def
R56385:56390 Imp <> update def
R56404:56404 Imp <> X def
R56392:56402 Imp <> empty_state def
R56343:56353 Imp <> E_WhileLoop constr
R56509:56514 Imp <> update def
R56554:56554 Imp <> Y def
R56517:56522 Imp <> update def
R56549:56549 Imp <> Y def
R56525:56530 Imp <> update def
R56544:56544 Imp <> X def
R56532:56542 Imp <> empty_state def
R56497:56501 Imp <> E_Seq constr
R56509:56514 Imp <> update def
R56554:56554 Imp <> Y def
R56517:56522 Imp <> update def
R56549:56549 Imp <> Y def
R56525:56530 Imp <> update def
R56544:56544 Imp <> X def
R56532:56542 Imp <> empty_state def
R56497:56501 Imp <> E_Seq constr
R56602:56606 Imp <> E_Ass constr
R56602:56606 Imp <> E_Ass constr
R56663:56667 Imp <> E_Ass constr
R56663:56667 Imp <> E_Ass constr
R56736:56741 Imp <> update def
R56820:56820 Imp <> X def
R56744:56749 Imp <> update def
R56815:56815 Imp <> Y def
R56752:56757 Imp <> update def
R56810:56810 Imp <> X def
R56760:56765 Imp <> update def
R56805:56805 Imp <> Y def
R56768:56773 Imp <> update def
R56800:56800 Imp <> Y def
R56776:56781 Imp <> update def
R56795:56795 Imp <> X def
R56783:56793 Imp <> empty_state def
R56718:56728 Imp <> E_WhileLoop constr
R56736:56741 Imp <> update def
R56820:56820 Imp <> X def
R56744:56749 Imp <> update def
R56815:56815 Imp <> Y def
R56752:56757 Imp <> update def
R56810:56810 Imp <> X def
R56760:56765 Imp <> update def
R56805:56805 Imp <> Y def
R56768:56773 Imp <> update def
R56800:56800 Imp <> Y def
R56776:56781 Imp <> update def
R56795:56795 Imp <> X def
R56783:56793 Imp <> empty_state def
R56718:56728 Imp <> E_WhileLoop constr
R56930:56935 Imp <> update def
R57001:57001 Imp <> Y def
R56938:56943 Imp <> update def
R56996:56996 Imp <> X def
R56946:56951 Imp <> update def
R56991:56991 Imp <> Y def
R56954:56959 Imp <> update def
R56986:56986 Imp <> Y def
R56962:56967 Imp <> update def
R56981:56981 Imp <> X def
R56969:56979 Imp <> empty_state def
R56918:56922 Imp <> E_Seq constr
R56930:56935 Imp <> update def
R57001:57001 Imp <> Y def
R56938:56943 Imp <> update def
R56996:56996 Imp <> X def
R56946:56951 Imp <> update def
R56991:56991 Imp <> Y def
R56954:56959 Imp <> update def
R56986:56986 Imp <> Y def
R56962:56967 Imp <> update def
R56981:56981 Imp <> X def
R56969:56979 Imp <> empty_state def
R56918:56922 Imp <> E_Seq constr
R57056:57060 Imp <> E_Ass constr
R57056:57060 Imp <> E_Ass constr
R57127:57131 Imp <> E_Ass constr
R57127:57131 Imp <> E_Ass constr
R57163:57172 Imp <> E_WhileEnd constr
R57163:57172 Imp <> E_WhileEnd constr
prf 57986:58004 <> ceval_deterministic
R58081:58083 Coq.Init.Logic <> :type_scope:x_'='_x not
R58078:58080 Imp <> st1 var
R58084:58086 Imp <> st2 var
R58057:58059 Imp <> ::x_'/'_x_'||'_x not
R58062:58065 Imp <> ::x_'/'_x_'||'_x not
R58056:58056 Imp <> c var
R58060:58061 Imp <> st var
R58066:58068 Imp <> st2 var
R58034:58036 Imp <> ::x_'/'_x_'||'_x not
R58039:58042 Imp <> ::x_'/'_x_'||'_x not
R58033:58033 Imp <> c var
R58037:58038 Imp <> st var
R58043:58045 Imp <> st1 var
R58325:58327 Coq.Init.Logic <> :type_scope:x_'='_x not
R58325:58327 Coq.Init.Logic <> :type_scope:x_'='_x not
R59114:59116 Coq.Init.Logic <> :type_scope:x_'='_x not
R59114:59116 Coq.Init.Logic <> :type_scope:x_'='_x not
prf 59595:59604 <> plus2_spec
R59669:59671 Coq.Init.Logic <> :type_scope:x_'='_x not
R59664:59666 Imp <> st' var
R59668:59668 Imp <> X def
R59673:59675 Coq.Init.Peano <> :nat_scope:x_'+'_x not
R59672:59672 Imp <> n var
R59646:59648 Imp <> ::x_'/'_x_'||'_x not
R59651:59654 Imp <> ::x_'/'_x_'||'_x not
R59641:59645 Imp <> plus2 def
R59649:59650 Imp <> st var
R59655:59657 Imp <> st' var
R59631:59633 Coq.Init.Logic <> :type_scope:x_'='_x not
R59627:59628 Imp <> st var
R59630:59630 Imp <> X def
R59634:59634 Imp <> n var
R59982:59990 Imp <> update_eq thm
R59982:59990 Imp <> update_eq thm
prf 60113:60127 <> XtimesYinZ_spec
R60213:60215 Coq.Init.Logic <> :type_scope:x_'='_x not
R60208:60210 Imp <> st' var
R60212:60212 Imp <> Z def
R60217:60219 Coq.Init.Peano <> :nat_scope:x_'*'_x not
R60216:60216 Imp <> n var
R60220:60220 Imp <> m var
R60190:60192 Imp <> ::x_'/'_x_'||'_x not
R60195:60198 Imp <> ::x_'/'_x_'||'_x not
R60180:60189 Imp <> XtimesYinZ def
R60193:60194 Imp <> st var
R60199:60201 Imp <> st' var
R60170:60172 Coq.Init.Logic <> :type_scope:x_'='_x not
R60166:60167 Imp <> st var
R60169:60169 Imp <> Y def
R60173:60173 Imp <> m var
R60156:60158 Coq.Init.Logic <> :type_scope:x_'='_x not
R60152:60153 Imp <> st var
R60155:60155 Imp <> X def
R60159:60159 Imp <> n var
R60304:60312 Imp <> update_eq thm
R60304:60312 Imp <> update_eq thm
prf 60388:60403 <> loop_never_stops
R60424:60425 Coq.Init.Logic <> :type_scope:'~'_x not
R60442:60442 Coq.Init.Logic <> :type_scope:'~'_x not
R60430:60432 Imp <> ::x_'/'_x_'||'_x not
R60435:60438 Imp <> ::x_'/'_x_'||'_x not
R60426:60429 Imp <> loop def
R60433:60434 Imp <> st var
R60439:60441 Imp <> st' var
R60483:60486 Imp <> loop def
R60511:60516 Imp <> ::'WHILE'_x_'DO'_x_'END' not
R60522:60525 Imp <> ::'WHILE'_x_'DO'_x_'END' not
R60530:60533 Imp <> ::'WHILE'_x_'DO'_x_'END' not
R60517:60521 Imp <> BTrue constr
R60526:60529 Imp <> ::'SKIP' not
R60511:60516 Imp <> ::'WHILE'_x_'DO'_x_'END' not
R60522:60525 Imp <> ::'WHILE'_x_'DO'_x_'END' not
R60530:60533 Imp <> ::'WHILE'_x_'DO'_x_'END' not
R60517:60521 Imp <> BTrue constr
R60526:60529 Imp <> ::'SKIP' not
def 61109:61117 <> no_whiles
R61124:61126 Imp <> com ind
R61131:61134 Coq.Init.Datatypes <> bool ind
R61147:61147 Imp <> c var
R61158:61161 Imp <> ::'SKIP' not
R61172:61175 Coq.Init.Datatypes <> true constr
R61182:61186 Imp <> ::x_'::='_x not
R61195:61198 Coq.Init.Datatypes <> true constr
R61206:61209 Imp <> ::x_';;'_x not
R61217:61220 Coq.Init.Datatypes <> andb def
R61238:61246 Imp <> no_whiles def
R61223:61231 Imp <> no_whiles def
R61256:61259 Imp <> ::'IFB'_x_'THEN'_x_'ELSE'_x_'FI' not
R61261:61266 Imp <> ::'IFB'_x_'THEN'_x_'ELSE'_x_'FI' not
R61269:61274 Imp <> ::'IFB'_x_'THEN'_x_'ELSE'_x_'FI' not
R61277:61279 Imp <> ::'IFB'_x_'THEN'_x_'ELSE'_x_'FI' not
R61284:61287 Coq.Init.Datatypes <> andb def
R61305:61313 Imp <> no_whiles def
R61290:61298 Imp <> no_whiles def
R61323:61328 Imp <> ::'WHILE'_x_'DO'_x_'END' not
R61330:61333 Imp <> ::'WHILE'_x_'DO'_x_'END' not
R61335:61338 Imp <> ::'WHILE'_x_'DO'_x_'END' not
R61344:61348 Coq.Init.Datatypes <> false constr
ind 61647:61656 <> no_whilesR
constr 61678:61684 <> nw_skip
constr 61708:61713 <> nw_ass
constr 61758:61763 <> nw_seq
constr 61868:61872 <> nw_if
R61659:61661 Imp <> com ind
R61688:61697 Imp <> no_whilesR ind
R61699:61702 Imp <> ::'SKIP' not
R61731:61740 Imp <> no_whilesR ind
R61745:61749 Imp <> ::x_'::='_x not
R61743:61744 Imp <> id var
R61750:61751 Imp <> ae var
R61842:61851 Imp <> no_whilesR ind
R61856:61859 Imp <> ::x_';;'_x not
R61854:61855 Imp <> c1 var
R61860:61861 Imp <> c2 var
R61798:61807 Imp <> no_whilesR ind
R61809:61810 Imp <> c2 var
R61781:61790 Imp <> no_whilesR ind
R61792:61793 Imp <> c1 var
R61954:61963 Imp <> no_whilesR ind
R61966:61969 Imp <> ::'IFB'_x_'THEN'_x_'ELSE'_x_'FI' not
R61971:61976 Imp <> ::'IFB'_x_'THEN'_x_'ELSE'_x_'FI' not
R61979:61984 Imp <> ::'IFB'_x_'THEN'_x_'ELSE'_x_'FI' not
R61987:61989 Imp <> ::'IFB'_x_'THEN'_x_'ELSE'_x_'FI' not
R61970:61970 Imp <> b var
R61977:61978 Imp <> ct var
R61985:61986 Imp <> cf var
R61909:61918 Imp <> no_whilesR ind
R61920:61921 Imp <> cf var
R61892:61901 Imp <> no_whilesR ind
R61903:61904 Imp <> ct var
prf 62002:62014 <> no_whiles_eqv
R62048:62052 Coq.Init.Logic <> :type_scope:x_'<->'_x not
R62041:62043 Coq.Init.Logic <> :type_scope:x_'='_x not
R62030:62038 Imp <> no_whiles def
R62040:62040 Imp <> c var
R62044:62047 Coq.Init.Datatypes <> true constr
R62053:62062 Imp <> no_whilesR ind
R62064:62064 Imp <> c var
R62181:62187 Imp <> nw_skip constr
R62181:62187 Imp <> nw_skip constr
R62219:62224 Imp <> nw_ass constr
R62219:62224 Imp <> nw_ass constr
R62267:62279 Coq.Bool.Bool <> andb_true_iff thm
R62267:62279 Coq.Bool.Bool <> andb_true_iff thm
R62306:62311 Imp <> nw_seq constr
R62306:62311 Imp <> nw_seq constr
R62419:62431 Coq.Bool.Bool <> andb_true_iff thm
R62419:62431 Coq.Bool.Bool <> andb_true_iff thm
R62458:62462 Imp <> nw_if constr
R62458:62462 Imp <> nw_if constr
R62727:62739 Coq.Bool.Bool <> andb_true_iff thm
R62727:62739 Coq.Bool.Bool <> andb_true_iff thm
R62803:62815 Coq.Bool.Bool <> andb_true_iff thm
R62803:62815 Coq.Bool.Bool <> andb_true_iff thm
prf 63095:63115 <> no_whiles__terminates
R63131:63133 Imp <> com ind
R63142:63146 Imp <> state def
R63168:63174 Coq.Init.Logic <> :type_scope:'exists'_x_'..'_x_','_x not
R63178:63179 Coq.Init.Logic <> :type_scope:'exists'_x_'..'_x_','_x not
R63181:63183 Imp <> ::x_'/'_x_'||'_x not
R63186:63189 Imp <> ::x_'/'_x_'||'_x not
R63180:63180 Imp <> c var
R63184:63185 Imp <> st var
R63190:63192 Imp <> st' var
R63152:63161 Imp <> no_whilesR ind
R63163:63163 Imp <> c var
R63304:63309 Imp <> E_Skip constr
R63304:63309 Imp <> E_Skip constr
R63338:63343 Imp <> update def
R63352:63356 Imp <> aeval def
R63338:63343 Imp <> update def
R63352:63356 Imp <> aeval def
R63377:63381 Imp <> E_Ass constr
R63377:63381 Imp <> E_Ass constr
R63422:63428 Coq.Init.Logic <> :type_scope:'exists'_x_'..'_x_','_x not
R63440:63441 Coq.Init.Logic <> :type_scope:'exists'_x_'..'_x_','_x not
R63435:63439 Imp <> state def
R63444:63446 Imp <> ::x_'/'_x_'||'_x not
R63449:63452 Imp <> ::x_'/'_x_'||'_x not
R63453:63455 Imp <> st2 var
R63422:63428 Coq.Init.Logic <> :type_scope:'exists'_x_'..'_x_','_x not
R63440:63441 Coq.Init.Logic <> :type_scope:'exists'_x_'..'_x_','_x not
R63435:63439 Imp <> state def
R63444:63446 Imp <> ::x_'/'_x_'||'_x not
R63449:63452 Imp <> ::x_'/'_x_'||'_x not
R63453:63455 Imp <> st2 var
R63529:63535 Coq.Init.Logic <> :type_scope:'exists'_x_'..'_x_','_x not
R63547:63548 Coq.Init.Logic <> :type_scope:'exists'_x_'..'_x_','_x not
R63542:63546 Imp <> state def
R63551:63553 Imp <> ::x_'/'_x_'||'_x not
R63557:63560 Imp <> ::x_'/'_x_'||'_x not
R63561:63563 Imp <> st3 var
R63529:63535 Coq.Init.Logic <> :type_scope:'exists'_x_'..'_x_','_x not
R63547:63548 Coq.Init.Logic <> :type_scope:'exists'_x_'..'_x_','_x not
R63542:63546 Imp <> state def
R63551:63553 Imp <> ::x_'/'_x_'||'_x not
R63557:63560 Imp <> ::x_'/'_x_'||'_x not
R63561:63563 Imp <> st3 var
R63649:63653 Imp <> E_Seq constr
R63649:63653 Imp <> E_Seq constr
R63713:63717 Imp <> beval def
R63713:63717 Imp <> beval def
R63766:63772 Coq.Init.Logic <> :type_scope:'exists'_x_'..'_x_','_x not
R63784:63785 Coq.Init.Logic <> :type_scope:'exists'_x_'..'_x_','_x not
R63779:63783 Imp <> state def
R63788:63790 Imp <> ::x_'/'_x_'||'_x not
R63793:63796 Imp <> ::x_'/'_x_'||'_x not
R63797:63799 Imp <> st' var
R63766:63772 Coq.Init.Logic <> :type_scope:'exists'_x_'..'_x_','_x not
R63784:63785 Coq.Init.Logic <> :type_scope:'exists'_x_'..'_x_','_x not
R63779:63783 Imp <> state def
R63788:63790 Imp <> ::x_'/'_x_'||'_x not
R63793:63796 Imp <> ::x_'/'_x_'||'_x not
R63797:63799 Imp <> st' var
R63895:63902 Imp <> E_IfTrue constr
R63895:63902 Imp <> E_IfTrue constr
R63962:63968 Coq.Init.Logic <> :type_scope:'exists'_x_'..'_x_','_x not
R63980:63981 Coq.Init.Logic <> :type_scope:'exists'_x_'..'_x_','_x not
R63975:63979 Imp <> state def
R63984:63986 Imp <> ::x_'/'_x_'||'_x not
R63989:63992 Imp <> ::x_'/'_x_'||'_x not
R63993:63995 Imp <> st' var
R63962:63968 Coq.Init.Logic <> :type_scope:'exists'_x_'..'_x_','_x not
R63980:63981 Coq.Init.Logic <> :type_scope:'exists'_x_'..'_x_','_x not
R63975:63979 Imp <> state def
R63984:63986 Imp <> ::x_'/'_x_'||'_x not
R63989:63992 Imp <> ::x_'/'_x_'||'_x not
R63993:63995 Imp <> st' var
R64091:64099 Imp <> E_IfFalse constr
R64091:64099 Imp <> E_IfFalse constr
ind 65476:65481 <> sinstr
constr 65495:65499 <> SPush
constr 65519:65523 <> SLoad
constr 65542:65546 <> SPlus
constr 65559:65564 <> SMinus
constr 65577:65581 <> SMult
R65510:65515 Imp <> sinstr ind
R65503:65505 Coq.Init.Datatypes <> nat ind
R65533:65538 Imp <> sinstr ind
R65527:65528 SfLib <> id ind
R65550:65555 Imp <> sinstr ind
R65568:65573 Imp <> sinstr ind
R65585:65590 Imp <> sinstr ind
def 66235:66243 <> s_execute
R66251:66255 Imp <> state def
R66267:66270 Coq.Init.Datatypes <> list ind
R66272:66274 Coq.Init.Datatypes <> nat ind
R66304:66307 Coq.Init.Datatypes <> list ind
R66309:66314 Imp <> sinstr ind
R66336:66339 Coq.Init.Datatypes <> list ind
R66341:66343 Coq.Init.Datatypes <> nat ind
R66356:66359 Imp <> prog var
R66370:66371 Coq.Lists.List ListNotations :list_scope:'['_']' not
R66376:66380 Imp <> stack var
R66393:66396 Coq.Init.Datatypes <> :list_scope:x_'::'_x not
R66386:66390 Imp <> SPush constr
R66406:66414 Imp <> s_execute def
R66421:66424 Coq.Init.Datatypes <> :list_scope:x_'::'_x not
R66425:66429 Imp <> stack var
R66416:66417 Imp <> st var
R66450:66453 Coq.Init.Datatypes <> :list_scope:x_'::'_x not
R66442:66446 Imp <> SLoad constr
R66463:66471 Imp <> s_execute def
R66477:66477 Coq.Init.Datatypes <> :list_scope:x_'::'_x not
R66483:66487 Coq.Init.Datatypes <> :list_scope:x_'::'_x not
R66478:66479 Imp <> st var
R66488:66492 Imp <> stack var
R66473:66474 Imp <> st var
R66510:66513 Coq.Init.Datatypes <> :list_scope:x_'::'_x not
R66505:66509 Imp <> SPlus constr
R66529:66533 Imp <> stack var
R66566:66569 Coq.Init.Datatypes <> :list_scope:x_'::'_x not
R66572:66575 Coq.Init.Datatypes <> :list_scope:x_'::'_x not
R66586:66594 Imp <> s_execute def
R66600:66600 Coq.Init.Datatypes <> :list_scope:x_'::'_x not
R66606:66610 Coq.Init.Datatypes <> :list_scope:x_'::'_x not
R66603:66603 Coq.Init.Peano <> :nat_scope:x_'+'_x not
R66596:66597 Imp <> st var
R66651:66654 Coq.Init.Datatypes <> :list_scope:x_'::'_x not
R66655:66656 Coq.Lists.List ListNotations :list_scope:'['_']' not
R66661:66669 Imp <> s_execute def
R66674:66674 Coq.Lists.List ListNotations :list_scope:'['_x_';'_'..'_';'_x_']' not
R66677:66677 Coq.Lists.List ListNotations :list_scope:'['_x_';'_'..'_';'_x_']' not
R66671:66672 Imp <> st var
R66709:66710 Coq.Lists.List ListNotations :list_scope:'['_']' not
R66715:66723 Imp <> s_execute def
R66728:66729 Coq.Lists.List ListNotations :list_scope:'['_']' not
R66725:66726 Imp <> st var
R66773:66776 Coq.Init.Datatypes <> :list_scope:x_'::'_x not
R66767:66772 Imp <> SMinus constr
R66792:66796 Imp <> stack var
R66830:66833 Coq.Init.Datatypes <> :list_scope:x_'::'_x not
R66836:66839 Coq.Init.Datatypes <> :list_scope:x_'::'_x not
R66850:66858 Imp <> s_execute def
R66864:66864 Coq.Init.Datatypes <> :list_scope:x_'::'_x not
R66872:66876 Coq.Init.Datatypes <> :list_scope:x_'::'_x not
R66867:66869 Coq.Init.Peano <> :nat_scope:x_'-'_x not
R66860:66861 Imp <> st var
R66918:66921 Coq.Init.Datatypes <> :list_scope:x_'::'_x not
R66922:66923 Coq.Lists.List ListNotations :list_scope:'['_']' not
R66928:66936 Imp <> s_execute def
R66941:66941 Coq.Lists.List ListNotations :list_scope:'['_x_';'_'..'_';'_x_']' not
R66944:66944 Coq.Lists.List ListNotations :list_scope:'['_x_';'_'..'_';'_x_']' not
R66938:66939 Imp <> st var
R66977:66978 Coq.Lists.List ListNotations :list_scope:'['_']' not
R66983:66991 Imp <> s_execute def
R66996:66997 Coq.Lists.List ListNotations :list_scope:'['_']' not
R66993:66994 Imp <> st var
R67041:67044 Coq.Init.Datatypes <> :list_scope:x_'::'_x not
R67036:67040 Imp <> SMult constr
R67060:67064 Imp <> stack var
R67097:67100 Coq.Init.Datatypes <> :list_scope:x_'::'_x not
R67103:67106 Coq.Init.Datatypes <> :list_scope:x_'::'_x not
R67117:67125 Imp <> s_execute def
R67131:67131 Coq.Init.Datatypes <> :list_scope:x_'::'_x not
R67137:67141 Coq.Init.Datatypes <> :list_scope:x_'::'_x not
R67134:67134 Coq.Init.Peano <> :nat_scope:x_'*'_x not
R67127:67128 Imp <> st var
R67182:67185 Coq.Init.Datatypes <> :list_scope:x_'::'_x not
R67186:67187 Coq.Lists.List ListNotations :list_scope:'['_']' not
R67192:67200 Imp <> s_execute def
R67205:67205 Coq.Lists.List ListNotations :list_scope:'['_x_';'_'..'_';'_x_']' not
R67208:67208 Coq.Lists.List ListNotations :list_scope:'['_x_';'_'..'_';'_x_']' not
R67202:67203 Imp <> st var
R67240:67241 Coq.Lists.List ListNotations :list_scope:'['_']' not
R67246:67254 Imp <> s_execute def
R67259:67260 Coq.Lists.List ListNotations :list_scope:'['_']' not
R67256:67257 Imp <> st var
def 67310:67319 <> s_execute1
R67395:67400 Coq.Init.Logic <> :type_scope:x_'='_x not
R67328:67336 Imp <> s_execute def
R67360:67360 Coq.Lists.List ListNotations :list_scope:'['_x_';'_'..'_';'_x_']' not
R67368:67369 Coq.Lists.List ListNotations :list_scope:'['_x_';'_'..'_';'_x_']' not
R67377:67378 Coq.Lists.List ListNotations :list_scope:'['_x_';'_'..'_';'_x_']' not
R67386:67387 Coq.Lists.List ListNotations :list_scope:'['_x_';'_'..'_';'_x_']' not
R67394:67394 Coq.Lists.List ListNotations :list_scope:'['_x_';'_'..'_';'_x_']' not
R67388:67393 Imp <> SMinus constr
R67379:67383 Imp <> SPush constr
R67370:67374 Imp <> SPush constr
R67361:67365 Imp <> SPush constr
R67350:67351 Coq.Lists.List ListNotations :list_scope:'['_']' not
R67338:67348 Imp <> empty_state def
R67401:67401 Coq.Lists.List ListNotations :list_scope:'['_x_';'_'..'_';'_x_']' not
R67403:67404 Coq.Lists.List ListNotations :list_scope:'['_x_';'_'..'_';'_x_']' not
R67406:67406 Coq.Lists.List ListNotations :list_scope:'['_x_';'_'..'_';'_x_']' not
def 67443:67452 <> s_execute2
R67541:67546 Coq.Init.Logic <> :type_scope:x_'='_x not
R67461:67469 Imp <> s_execute def
R67509:67509 Coq.Lists.List ListNotations :list_scope:'['_x_';'_'..'_';'_x_']' not
R67517:67518 Coq.Lists.List ListNotations :list_scope:'['_x_';'_'..'_';'_x_']' not
R67526:67527 Coq.Lists.List ListNotations :list_scope:'['_x_';'_'..'_';'_x_']' not
R67533:67534 Coq.Lists.List ListNotations :list_scope:'['_x_';'_'..'_';'_x_']' not
R67540:67540 Coq.Lists.List ListNotations :list_scope:'['_x_';'_'..'_';'_x_']' not
R67535:67539 Imp <> SPlus constr
R67528:67532 Imp <> SMult constr
R67519:67523 Imp <> SLoad constr
R67525:67525 Imp <> X def
R67510:67514 Imp <> SPush constr
R67496:67496 Coq.Lists.List ListNotations :list_scope:'['_x_';'_'..'_';'_x_']' not
R67498:67498 Coq.Lists.List ListNotations :list_scope:'['_x_';'_'..'_';'_x_']' not
R67500:67500 Coq.Lists.List ListNotations :list_scope:'['_x_';'_'..'_';'_x_']' not
R67472:67477 Imp <> update def
R67491:67491 Imp <> X def
R67479:67489 Imp <> empty_state def
R67547:67547 Coq.Lists.List ListNotations :list_scope:'['_x_';'_'..'_';'_x_']' not
R67550:67551 Coq.Lists.List ListNotations :list_scope:'['_x_';'_'..'_';'_x_']' not
R67553:67553 Coq.Lists.List ListNotations :list_scope:'['_x_';'_'..'_';'_x_']' not
def 67791:67799 <> s_compile
R67806:67809 Imp <> aexp ind
R67814:67817 Coq.Init.Datatypes <> list ind
R67819:67824 Imp <> sinstr ind
R67837:67837 Imp <> e var
R67848:67851 Imp <> ANum constr
R67858:67858 Coq.Lists.List ListNotations :list_scope:'['_x_';'_'..'_';'_x_']' not
R67866:67866 Coq.Lists.List ListNotations :list_scope:'['_x_';'_'..'_';'_x_']' not
R67859:67863 Imp <> SPush constr
R67872:67874 Imp <> AId constr
R67882:67882 Coq.Lists.List ListNotations :list_scope:'['_x_';'_'..'_';'_x_']' not
R67891:67891 Coq.Lists.List ListNotations :list_scope:'['_x_';'_'..'_';'_x_']' not
R67883:67887 Imp <> SLoad constr
R67897:67901 Imp <> APlus constr
R67924:67927 Coq.Init.Datatypes <> :list_scope:x_'++'_x not
R67912:67920 Imp <> s_compile def
R67940:67943 Coq.Init.Datatypes <> :list_scope:x_'++'_x not
R67928:67936 Imp <> s_compile def
R67944:67944 Coq.Lists.List ListNotations :list_scope:'['_x_';'_'..'_';'_x_']' not
R67950:67950 Coq.Lists.List ListNotations :list_scope:'['_x_';'_'..'_';'_x_']' not
R67945:67949 Imp <> SPlus constr
R67956:67961 Imp <> AMinus constr
R67984:67987 Coq.Init.Datatypes <> :list_scope:x_'++'_x not
R67972:67980 Imp <> s_compile def
R68000:68003 Coq.Init.Datatypes <> :list_scope:x_'++'_x not
R67988:67996 Imp <> s_compile def
R68004:68004 Coq.Lists.List ListNotations :list_scope:'['_x_';'_'..'_';'_x_']' not
R68011:68011 Coq.Lists.List ListNotations :list_scope:'['_x_';'_'..'_';'_x_']' not
R68005:68010 Imp <> SMinus constr
R68017:68021 Imp <> AMult constr
R68044:68047 Coq.Init.Datatypes <> :list_scope:x_'++'_x not
R68032:68040 Imp <> s_compile def
R68060:68063 Coq.Init.Datatypes <> :list_scope:x_'++'_x not
R68048:68056 Imp <> s_compile def
R68064:68064 Coq.Lists.List ListNotations :list_scope:'['_x_';'_'..'_';'_x_']' not
R68070:68070 Coq.Lists.List ListNotations :list_scope:'['_x_';'_'..'_';'_x_']' not
R68065:68069 Imp <> SMult constr
def 68182:68191 <> s_compile1
R68250:68254 Coq.Init.Logic <> :type_scope:x_'='_x not
R68199:68207 Imp <> s_compile def
R68210:68215 Imp <> AMinus constr
R68226:68230 Imp <> AMult constr
R68242:68244 Imp <> AId constr
R68246:68246 Imp <> Y def
R68233:68236 Imp <> ANum constr
R68218:68220 Imp <> AId constr
R68222:68222 Imp <> X def
R68255:68255 Coq.Lists.List ListNotations :list_scope:'['_x_';'_'..'_';'_x_']' not
R68263:68264 Coq.Lists.List ListNotations :list_scope:'['_x_';'_'..'_';'_x_']' not
R68272:68273 Coq.Lists.List ListNotations :list_scope:'['_x_';'_'..'_';'_x_']' not
R68281:68282 Coq.Lists.List ListNotations :list_scope:'['_x_';'_'..'_';'_x_']' not
R68288:68289 Coq.Lists.List ListNotations :list_scope:'['_x_';'_'..'_';'_x_']' not
R68296:68296 Coq.Lists.List ListNotations :list_scope:'['_x_';'_'..'_';'_x_']' not
R68290:68295 Imp <> SMinus constr
R68283:68287 Imp <> SMult constr
R68274:68278 Imp <> SLoad constr
R68280:68280 Imp <> Y def
R68265:68269 Imp <> SPush constr
R68256:68260 Imp <> SLoad constr
R68262:68262 Imp <> X def
prf 69094:69108 <> s_compile_lemma
R69184:69188 Coq.Init.Logic <> :type_scope:x_'='_x not
R69141:69149 Imp <> s_execute def
R69175:69178 Coq.Init.Datatypes <> :list_scope:x_'++'_x not
R69164:69172 Imp <> s_compile def
R69174:69174 Imp <> e var
R69179:69182 Imp <> prog var
R69157:69161 Imp <> stack var
R69151:69155 Imp <> state var
R69189:69197 Imp <> s_execute def
R69244:69247 Imp <> prog var
R69206:69214 Imp <> s_execute def
R69230:69238 Imp <> s_compile def
R69240:69240 Imp <> e var
R69223:69227 Imp <> stack var
R69217:69221 Imp <> state var
R69199:69203 Imp <> state var
R69394:69402 Coq.Lists.List <> app_assoc thm
R69463:69471 Imp <> s_execute def
R69519:69527 Imp <> s_compile def
R69480:69488 Imp <> s_execute def
R69503:69511 Imp <> s_compile def
R69394:69402 Coq.Lists.List <> app_assoc thm
R69394:69402 Coq.Lists.List <> app_assoc thm
R69394:69402 Coq.Lists.List <> app_assoc thm
R69463:69471 Imp <> s_execute def
R69519:69527 Imp <> s_compile def
R69480:69488 Imp <> s_execute def
R69503:69511 Imp <> s_compile def
R69394:69402 Coq.Lists.List <> app_assoc thm
R69394:69402 Coq.Lists.List <> app_assoc thm
R69394:69402 Coq.Lists.List <> app_assoc thm
R69463:69471 Imp <> s_execute def
R69519:69527 Imp <> s_compile def
R69480:69488 Imp <> s_execute def
R69503:69511 Imp <> s_compile def
R69394:69402 Coq.Lists.List <> app_assoc thm
R69394:69402 Coq.Lists.List <> app_assoc thm
R69394:69402 Coq.Lists.List <> app_assoc thm
R69463:69471 Imp <> s_execute def
R69519:69527 Imp <> s_compile def
R69480:69488 Imp <> s_execute def
R69503:69511 Imp <> s_compile def
prf 69747:69762 <> s_compile_lemma2
R69779:69783 Imp <> state def
R69791:69794 Imp <> aexp ind
R69806:69809 Coq.Init.Datatypes <> list ind
R69811:69813 Coq.Init.Datatypes <> nat ind
R69851:69854 Coq.Init.Logic <> :type_scope:x_'='_x not
R69819:69827 Imp <> s_execute def
R69839:69847 Imp <> s_compile def
R69849:69849 Imp <> e var
R69832:69836 Imp <> stack var
R69829:69830 Imp <> st var
R69865:69868 Coq.Init.Datatypes <> :list_scope:x_'::'_x not
R69855:69859 Imp <> aeval def
R69864:69864 Imp <> e var
R69861:69862 Imp <> st var
R69869:69873 Imp <> stack var
R70029:70043 Imp <> s_compile_lemma thm
R70062:70076 Imp <> s_compile_lemma thm
R70029:70043 Imp <> s_compile_lemma thm
R70029:70043 Imp <> s_compile_lemma thm
R70029:70043 Imp <> s_compile_lemma thm
R70062:70076 Imp <> s_compile_lemma thm
R70062:70076 Imp <> s_compile_lemma thm
R70062:70076 Imp <> s_compile_lemma thm
prf 70144:70160 <> s_compile_correct
R70177:70181 Imp <> state def
R70189:70192 Imp <> aexp ind
R70227:70229 Coq.Init.Logic <> :type_scope:x_'='_x not
R70198:70206 Imp <> s_execute def
R70215:70223 Imp <> s_compile def
R70225:70225 Imp <> e var
R70211:70212 Coq.Lists.List ListNotations :list_scope:'['_']' not
R70208:70209 Imp <> st var
R70230:70231 Coq.Lists.List ListNotations :list_scope:'['_x_';'_'..'_';'_x_']' not
R70242:70243 Coq.Lists.List ListNotations :list_scope:'['_x_';'_'..'_';'_x_']' not
R70232:70236 Imp <> aeval def
R70241:70241 Imp <> e var
R70238:70239 Imp <> st var
R70315:70316 Coq.Lists.List ListNotations :list_scope:'['_']' not
R70276:70291 Imp <> s_compile_lemma2 thm
R70315:70316 Coq.Lists.List ListNotations :list_scope:'['_']' not
R70276:70291 Imp <> s_compile_lemma2 thm
mod 70402:70409 <> BreakImp
ind 70706:70708 BreakImp com
constr 70724:70728 BreakImp CSkip
constr 70740:70745 BreakImp CBreak
constr 70757:70760 BreakImp CAss
constr 70786:70789 BreakImp CSeq
constr 70815:70817 BreakImp CIf
constr 70851:70856 BreakImp CWhile
R70732:70734 Imp <> com ind
R70749:70751 Imp <> com ind
R70778:70780 Imp <> com ind
R70770:70773 Imp BreakImp aexp ind
R70764:70765 SfLib <> id ind
R70807:70809 Imp <> com ind
R70800:70802 Imp <> com ind
R70793:70795 Imp <> com ind
R70843:70845 Imp <> com ind
R70836:70838 Imp <> com ind
R70829:70831 Imp <> com ind
R70821:70824 Imp BreakImp bexp ind
R70875:70877 Imp <> com ind
R70868:70870 Imp <> com ind
R70860:70863 Imp BreakImp bexp ind
R71092:71096 Imp BreakImp CSkip constr
not 71078 BreakImp ::'SKIP'
R71123:71128 Imp BreakImp CBreak constr
not 71108 BreakImp ::'BREAK'
R71158:71161 Imp BreakImp CAss constr
not 71140 BreakImp ::x_'::='_x
R71208:71211 Imp BreakImp CSeq constr
not 71192 BreakImp ::x_';'_x
R71296:71301 Imp BreakImp CWhile constr
not 71265 BreakImp ::'WHILE'_x_'DO'_x_'END'
R71395:71397 Imp BreakImp CIf constr
not 71353 BreakImp ::'IFB'_x_'THEN'_x_'ELSE'_x_'FI'
ind 72491:72496 BreakImp status
constr 72512:72520 BreakImp SContinue
constr 72535:72540 BreakImp SBreak
R72524:72529 Imp <> status ind
R72544:72549 Imp <> status ind
ind 74945:74949 BreakImp ceval
constr 75000:75005 BreakImp E_Skip
constr 75059:75065 BreakImp E_Break
constr 75117:75121 BreakImp E_Ass
constr 75222:75231 BreakImp E_SeqBreak
constr 75330:75342 BreakImp E_SeqContinue
constr 75477:75484 BreakImp E_IfTrue
constr 75621:75629 BreakImp E_IfFalse
constr 75767:75776 BreakImp E_WhileEnd
constr 75875:75890 BreakImp E_WhileLoopBreak
constr 76025:76043 BreakImp E_WhileLoopContinue
R74979:74983 Imp BreakImp state def
R74969:74974 Imp BreakImp status ind
R74960:74964 Imp BreakImp state def
R74953:74955 Imp BreakImp com ind
R76277:76281 Imp <> ceval ind
R75031:75033 Imp BreakImp ::x_'/'_x_'||'_x_'/'_x not
R75036:75039 Imp BreakImp ::x_'/'_x_'||'_x_'/'_x not
R75049:75051 Imp BreakImp ::x_'/'_x_'||'_x_'/'_x not
R75026:75030 Imp BreakImp CSkip constr
R75034:75035 Imp <> st var
R75040:75048 Imp BreakImp SContinue constr
R75052:75053 Imp <> st var
R75092:75094 Imp BreakImp ::x_'/'_x_'||'_x_'/'_x not
R75097:75100 Imp BreakImp ::x_'/'_x_'||'_x_'/'_x not
R75107:75109 Imp BreakImp ::x_'/'_x_'||'_x_'/'_x not
R75086:75091 Imp BreakImp CBreak constr
R75095:75096 Imp <> st var
R75101:75106 Imp BreakImp SBreak constr
R75110:75111 Imp <> st var
R75172:75172 Imp BreakImp ::x_'/'_x_'||'_x_'/'_x not
R75180:75183 Imp BreakImp ::x_'/'_x_'||'_x_'/'_x not
R75186:75189 Imp BreakImp ::x_'/'_x_'||'_x_'/'_x not
R75199:75202 Imp BreakImp ::x_'/'_x_'||'_x_'/'_x not
R75216:75216 Imp BreakImp ::x_'/'_x_'||'_x_'/'_x not
R75174:75178 Imp BreakImp ::x_'::='_x not
R75173:75173 Imp <> x var
R75179:75179 Imp <> a var
R75184:75185 Imp <> st var
R75190:75198 Imp BreakImp SContinue constr
R75203:75208 Imp BreakImp update def
R75215:75215 Imp <> n var
R75213:75213 Imp <> x var
R75210:75211 Imp <> st var
R75158:75160 Coq.Init.Logic <> :type_scope:x_'='_x not
R75148:75152 Imp BreakImp aeval def
R75157:75157 Imp <> a var
R75154:75155 Imp <> st var
R75161:75161 Imp <> n var
R75295:75295 Imp BreakImp ::x_'/'_x_'||'_x_'/'_x not
R75303:75306 Imp BreakImp ::x_'/'_x_'||'_x_'/'_x not
R75309:75312 Imp BreakImp ::x_'/'_x_'||'_x_'/'_x not
R75319:75321 Imp BreakImp ::x_'/'_x_'||'_x_'/'_x not
R75298:75300 Imp BreakImp ::x_';'_x not
R75296:75297 Imp <> c1 var
R75301:75302 Imp <> c2 var
R75307:75308 Imp <> st var
R75313:75318 Imp BreakImp SBreak constr
R75322:75324 Imp <> st' var
R75264:75266 Imp BreakImp ::x_'/'_x_'||'_x_'/'_x not
R75269:75272 Imp BreakImp ::x_'/'_x_'||'_x_'/'_x not
R75279:75281 Imp BreakImp ::x_'/'_x_'||'_x_'/'_x not
R75262:75263 Imp <> c1 var
R75267:75268 Imp <> st var
R75273:75278 Imp BreakImp SBreak constr
R75282:75284 Imp <> st' var
R75446:75446 Imp BreakImp ::x_'/'_x_'||'_x_'/'_x not
R75454:75457 Imp BreakImp ::x_'/'_x_'||'_x_'/'_x not
R75460:75463 Imp BreakImp ::x_'/'_x_'||'_x_'/'_x not
R75465:75467 Imp BreakImp ::x_'/'_x_'||'_x_'/'_x not
R75449:75451 Imp BreakImp ::x_';'_x not
R75447:75448 Imp <> c1 var
R75452:75453 Imp <> c2 var
R75458:75459 Imp <> st var
R75464:75464 Imp <> s var
R75468:75471 Imp <> st'' var
R75418:75420 Imp BreakImp ::x_'/'_x_'||'_x_'/'_x not
R75424:75427 Imp BreakImp ::x_'/'_x_'||'_x_'/'_x not
R75429:75431 Imp BreakImp ::x_'/'_x_'||'_x_'/'_x not
R75416:75417 Imp <> c2 var
R75421:75423 Imp <> st' var
R75428:75428 Imp <> s var
R75432:75435 Imp <> st'' var
R75382:75384 Imp BreakImp ::x_'/'_x_'||'_x_'/'_x not
R75387:75390 Imp BreakImp ::x_'/'_x_'||'_x_'/'_x not
R75400:75402 Imp BreakImp ::x_'/'_x_'||'_x_'/'_x not
R75380:75381 Imp <> c1 var
R75385:75386 Imp <> st var
R75391:75399 Imp BreakImp SContinue constr
R75403:75405 Imp <> st' var
R75574:75574 Imp BreakImp ::x_'/'_x_'||'_x_'/'_x not
R75599:75602 Imp BreakImp ::x_'/'_x_'||'_x_'/'_x not
R75605:75608 Imp BreakImp ::x_'/'_x_'||'_x_'/'_x not
R75610:75612 Imp BreakImp ::x_'/'_x_'||'_x_'/'_x not
R75575:75578 Imp BreakImp ::'IFB'_x_'THEN'_x_'ELSE'_x_'FI' not
R75580:75585 Imp BreakImp ::'IFB'_x_'THEN'_x_'ELSE'_x_'FI' not
R75588:75593 Imp BreakImp ::'IFB'_x_'THEN'_x_'ELSE'_x_'FI' not
R75596:75598 Imp BreakImp ::'IFB'_x_'THEN'_x_'ELSE'_x_'FI' not
R75579:75579 Imp <> b var
R75586:75587 Imp <> c1 var
R75594:75595 Imp <> c2 var
R75603:75604 Imp <> st var
R75609:75609 Imp <> s var
R75613:75615 Imp <> st' var
R75557:75559 Coq.Init.Logic <> :type_scope:x_'='_x not
R75547:75551 Imp BreakImp beval def
R75556:75556 Imp <> b var
R75553:75554 Imp <> st var
R75560:75563 Coq.Init.Datatypes <> true constr
R75521:75523 Imp BreakImp ::x_'/'_x_'||'_x_'/'_x not
R75526:75529 Imp BreakImp ::x_'/'_x_'||'_x_'/'_x not
R75531:75533 Imp BreakImp ::x_'/'_x_'||'_x_'/'_x not
R75519:75520 Imp <> c1 var
R75524:75525 Imp <> st var
R75530:75530 Imp <> s var
R75534:75536 Imp <> st' var
R75720:75720 Imp BreakImp ::x_'/'_x_'||'_x_'/'_x not
R75745:75748 Imp BreakImp ::x_'/'_x_'||'_x_'/'_x not
R75751:75754 Imp BreakImp ::x_'/'_x_'||'_x_'/'_x not
R75756:75758 Imp BreakImp ::x_'/'_x_'||'_x_'/'_x not
R75721:75724 Imp BreakImp ::'IFB'_x_'THEN'_x_'ELSE'_x_'FI' not
R75726:75731 Imp BreakImp ::'IFB'_x_'THEN'_x_'ELSE'_x_'FI' not
R75734:75739 Imp BreakImp ::'IFB'_x_'THEN'_x_'ELSE'_x_'FI' not
R75742:75744 Imp BreakImp ::'IFB'_x_'THEN'_x_'ELSE'_x_'FI' not
R75725:75725 Imp <> b var
R75732:75733 Imp <> c1 var
R75740:75741 Imp <> c2 var
R75749:75750 Imp <> st var
R75755:75755 Imp <> s var
R75759:75761 Imp <> st' var
R75702:75704 Coq.Init.Logic <> :type_scope:x_'='_x not
R75692:75696 Imp BreakImp beval def
R75701:75701 Imp <> b var
R75698:75699 Imp <> st var
R75705:75709 Coq.Init.Datatypes <> false constr
R75666:75668 Imp BreakImp ::x_'/'_x_'||'_x_'/'_x not
R75671:75674 Imp BreakImp ::x_'/'_x_'||'_x_'/'_x not
R75676:75678 Imp BreakImp ::x_'/'_x_'||'_x_'/'_x not
R75664:75665 Imp <> c2 var
R75669:75670 Imp <> st var
R75675:75675 Imp <> s var
R75679:75681 Imp <> st' var
R75829:75829 Imp BreakImp ::x_'/'_x_'||'_x_'/'_x not
R75846:75849 Imp BreakImp ::x_'/'_x_'||'_x_'/'_x not
R75852:75855 Imp BreakImp ::x_'/'_x_'||'_x_'/'_x not
R75865:75867 Imp BreakImp ::x_'/'_x_'||'_x_'/'_x not
R75830:75835 Imp BreakImp ::'WHILE'_x_'DO'_x_'END' not
R75837:75840 Imp BreakImp ::'WHILE'_x_'DO'_x_'END' not
R75842:75845 Imp BreakImp ::'WHILE'_x_'DO'_x_'END' not
R75836:75836 Imp <> b var
R75841:75841 Imp <> c var
R75850:75851 Imp <> st var
R75856:75864 Imp BreakImp SContinue constr
R75868:75869 Imp <> st var
R75811:75813 Coq.Init.Logic <> :type_scope:x_'='_x not
R75801:75805 Imp BreakImp beval def
R75810:75810 Imp <> b var
R75807:75808 Imp <> st var
R75814:75818 Coq.Init.Datatypes <> false constr
R75978:75978 Imp BreakImp ::x_'/'_x_'||'_x_'/'_x not
R75995:75998 Imp BreakImp ::x_'/'_x_'||'_x_'/'_x not
R76001:76004 Imp BreakImp ::x_'/'_x_'||'_x_'/'_x not
R76014:76016 Imp BreakImp ::x_'/'_x_'||'_x_'/'_x not
R75979:75984 Imp BreakImp ::'WHILE'_x_'DO'_x_'END' not
R75986:75989 Imp BreakImp ::'WHILE'_x_'DO'_x_'END' not
R75991:75994 Imp BreakImp ::'WHILE'_x_'DO'_x_'END' not
R75985:75985 Imp <> b var
R75990:75990 Imp <> c var
R75999:76000 Imp <> st var
R76005:76013 Imp BreakImp SContinue constr
R76017:76019 Imp <> st' var
R75947:75949 Imp BreakImp ::x_'/'_x_'||'_x_'/'_x not
R75952:75955 Imp BreakImp ::x_'/'_x_'||'_x_'/'_x not
R75962:75964 Imp BreakImp ::x_'/'_x_'||'_x_'/'_x not
R75946:75946 Imp <> c var
R75950:75951 Imp <> st var
R75956:75961 Imp BreakImp SBreak constr
R75965:75967 Imp <> st' var
R75929:75931 Coq.Init.Logic <> :type_scope:x_'='_x not
R75919:75923 Imp BreakImp beval def
R75928:75928 Imp <> b var
R75925:75926 Imp <> st var
R75932:75935 Coq.Init.Datatypes <> true constr
R76193:76193 Imp BreakImp ::x_'/'_x_'||'_x_'/'_x not
R76210:76213 Imp BreakImp ::x_'/'_x_'||'_x_'/'_x not
R76216:76219 Imp BreakImp ::x_'/'_x_'||'_x_'/'_x not
R76229:76231 Imp BreakImp ::x_'/'_x_'||'_x_'/'_x not
R76194:76199 Imp BreakImp ::'WHILE'_x_'DO'_x_'END' not
R76201:76204 Imp BreakImp ::'WHILE'_x_'DO'_x_'END' not
R76206:76209 Imp BreakImp ::'WHILE'_x_'DO'_x_'END' not
R76200:76200 Imp <> b var
R76205:76205 Imp <> c var
R76214:76215 Imp <> st var
R76220:76228 Imp BreakImp SContinue constr
R76232:76235 Imp <> st'' var
R76139:76139 Imp BreakImp ::x_'/'_x_'||'_x_'/'_x not
R76156:76159 Imp BreakImp ::x_'/'_x_'||'_x_'/'_x not
R76163:76166 Imp BreakImp ::x_'/'_x_'||'_x_'/'_x not
R76176:76178 Imp BreakImp ::x_'/'_x_'||'_x_'/'_x not
R76140:76145 Imp BreakImp ::'WHILE'_x_'DO'_x_'END' not
R76147:76150 Imp BreakImp ::'WHILE'_x_'DO'_x_'END' not
R76152:76155 Imp BreakImp ::'WHILE'_x_'DO'_x_'END' not
R76146:76146 Imp <> b var
R76151:76151 Imp <> c var
R76160:76162 Imp <> st' var
R76167:76175 Imp BreakImp SContinue constr
R76179:76182 Imp <> st'' var
R76105:76107 Imp BreakImp ::x_'/'_x_'||'_x_'/'_x not
R76110:76113 Imp BreakImp ::x_'/'_x_'||'_x_'/'_x not
R76123:76125 Imp BreakImp ::x_'/'_x_'||'_x_'/'_x not
R76104:76104 Imp <> c var
R76108:76109 Imp <> st var
R76114:76122 Imp BreakImp SContinue constr
R76126:76128 Imp <> st' var
R76087:76089 Coq.Init.Logic <> :type_scope:x_'='_x not
R76077:76081 Imp BreakImp beval def
R76086:76086 Imp <> b var
R76083:76084 Imp <> st var
R76090:76093 Coq.Init.Datatypes <> true constr
R76277:76281 Imp BreakImp ceval ind
not 76246 BreakImp ::x_'/'_x_'||'_x_'/'_x
prf 76719:76730 BreakImp break_ignore
R76795:76797 Coq.Init.Logic <> :type_scope:x_'='_x not
R76793:76794 Imp <> st var
R76798:76800 Imp <> st' var
R76758:76758 Imp BreakImp ::x_'/'_x_'||'_x_'/'_x not
R76767:76770 Imp BreakImp ::x_'/'_x_'||'_x_'/'_x not
R76773:76776 Imp BreakImp ::x_'/'_x_'||'_x_'/'_x not
R76778:76780 Imp BreakImp ::x_'/'_x_'||'_x_'/'_x not
R76764:76765 Imp BreakImp ::x_';'_x not
R76759:76763 Imp BreakImp ::'BREAK' not
R76766:76766 Imp <> c var
R76771:76772 Imp <> st var
R76777:76777 Imp <> s var
R76781:76783 Imp <> st' var
prf 76921:76934 BreakImp while_continue
R77002:77004 Coq.Init.Logic <> :type_scope:x_'='_x not
R77001:77001 Imp <> s var
R77005:77013 Imp BreakImp SContinue constr
R76961:76961 Imp BreakImp ::x_'/'_x_'||'_x_'/'_x not
R76978:76981 Imp BreakImp ::x_'/'_x_'||'_x_'/'_x not
R76984:76987 Imp BreakImp ::x_'/'_x_'||'_x_'/'_x not
R76989:76991 Imp BreakImp ::x_'/'_x_'||'_x_'/'_x not
R76962:76967 Imp BreakImp ::'WHILE'_x_'DO'_x_'END' not
R76969:76972 Imp BreakImp ::'WHILE'_x_'DO'_x_'END' not
R76974:76977 Imp BreakImp ::'WHILE'_x_'DO'_x_'END' not
R76968:76968 Imp <> b var
R76973:76973 Imp <> c var
R76982:76983 Imp <> st var
R76988:76988 Imp <> s var
R76992:76994 Imp <> st' var
prf 77100:77119 BreakImp while_stops_on_break
R77195:77195 Imp BreakImp ::x_'/'_x_'||'_x_'/'_x not
R77212:77215 Imp BreakImp ::x_'/'_x_'||'_x_'/'_x not
R77218:77221 Imp BreakImp ::x_'/'_x_'||'_x_'/'_x not
R77231:77233 Imp BreakImp ::x_'/'_x_'||'_x_'/'_x not
R77196:77201 Imp BreakImp ::'WHILE'_x_'DO'_x_'END' not
R77203:77206 Imp BreakImp ::'WHILE'_x_'DO'_x_'END' not
R77208:77211 Imp BreakImp ::'WHILE'_x_'DO'_x_'END' not
R77202:77202 Imp <> b var
R77207:77207 Imp <> c var
R77216:77217 Imp <> st var
R77222:77230 Imp BreakImp SContinue constr
R77234:77236 Imp <> st' var
R77168:77170 Imp BreakImp ::x_'/'_x_'||'_x_'/'_x not
R77173:77176 Imp BreakImp ::x_'/'_x_'||'_x_'/'_x not
R77183:77185 Imp BreakImp ::x_'/'_x_'||'_x_'/'_x not
R77167:77167 Imp <> c var
R77171:77172 Imp <> st var
R77177:77182 Imp BreakImp SBreak constr
R77186:77188 Imp <> st' var
R77154:77156 Coq.Init.Logic <> :type_scope:x_'='_x not
R77144:77148 Imp BreakImp beval def
R77153:77153 Imp <> b var
R77150:77151 Imp <> st var
R77157:77160 Coq.Init.Datatypes <> true constr
R77281:77296 Imp BreakImp E_WhileLoopBreak constr
R77281:77296 Imp BreakImp E_WhileLoopBreak constr
prf 77410:77425 BreakImp while_break_true
R77522:77528 Coq.Init.Logic <> :type_scope:'exists'_x_'..'_x_','_x not
R77533:77534 Coq.Init.Logic <> :type_scope:'exists'_x_'..'_x_','_x not
R77536:77538 Imp BreakImp ::x_'/'_x_'||'_x_'/'_x not
R77543:77546 Imp BreakImp ::x_'/'_x_'||'_x_'/'_x not
R77553:77555 Imp BreakImp ::x_'/'_x_'||'_x_'/'_x not
R77535:77535 Imp <> c var
R77539:77542 Imp <> st'' var
R77547:77552 Imp BreakImp SBreak constr
R77556:77558 Imp <> st' var
R77509:77511 Coq.Init.Logic <> :type_scope:x_'='_x not
R77498:77502 Imp BreakImp beval def
R77508:77508 Imp <> b var
R77504:77506 Imp <> st' var
R77512:77515 Coq.Init.Datatypes <> true constr
R77450:77450 Imp BreakImp ::x_'/'_x_'||'_x_'/'_x not
R77467:77470 Imp BreakImp ::x_'/'_x_'||'_x_'/'_x not
R77473:77476 Imp BreakImp ::x_'/'_x_'||'_x_'/'_x not
R77486:77488 Imp BreakImp ::x_'/'_x_'||'_x_'/'_x not
R77451:77456 Imp BreakImp ::'WHILE'_x_'DO'_x_'END' not
R77458:77461 Imp BreakImp ::'WHILE'_x_'DO'_x_'END' not
R77463:77466 Imp BreakImp ::'WHILE'_x_'DO'_x_'END' not
R77457:77457 Imp <> b var
R77462:77462 Imp <> c var
R77471:77472 Imp <> st var
R77477:77485 Imp BreakImp SContinue constr
R77489:77491 Imp <> st' var
prf 77789:77807 BreakImp ceval_deterministic
R77820:77822 Imp BreakImp com ind
R77912:77915 Coq.Init.Logic <> :type_scope:x_'/\'_x not
R77906:77908 Coq.Init.Logic <> :type_scope:x_'='_x not
R77903:77905 Imp <> st1 var
R77909:77911 Imp <> st2 var
R77918:77920 Coq.Init.Logic <> :type_scope:x_'='_x not
R77916:77917 Imp <> s1 var
R77921:77922 Imp <> s2 var
R77877:77879 Imp BreakImp ::x_'/'_x_'||'_x_'/'_x not
R77882:77885 Imp BreakImp ::x_'/'_x_'||'_x_'/'_x not
R77888:77890 Imp BreakImp ::x_'/'_x_'||'_x_'/'_x not
R77876:77876 Imp <> c var
R77880:77881 Imp <> st var
R77886:77887 Imp <> s2 var
R77891:77893 Imp <> st2 var
R77849:77851 Imp BreakImp ::x_'/'_x_'||'_x_'/'_x not
R77854:77857 Imp BreakImp ::x_'/'_x_'||'_x_'/'_x not
R77860:77862 Imp BreakImp ::x_'/'_x_'||'_x_'/'_x not
R77848:77848 Imp <> c var
R77852:77853 Imp <> st var
R77858:77859 Imp <> s1 var
R77863:77865 Imp <> st1 var
R79778:79785 Imp <> <> mod
