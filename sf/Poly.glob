DIGEST b61c45a67953e3f0c8149f4362e81385
FPoly
R354:358 Lists <> <> lib
ind 905:912 <> boollist
constr 928:935 <> bool_nil
constr 952:960 <> bool_cons
R939:946 Poly <> boollist ind
R984:991 Poly <> boollist ind
R972:979 Poly <> boollist ind
R964:967 Basics <> bool ind
ind 1478:1481 <> list
constr 1506:1508 <> nil
constr 1523:1526 <> cons
R1512:1515 Poly <> list ind
R1545:1548 Poly <> list ind
R1535:1538 Poly <> list ind
R2741:2743 Poly <> nil constr
R2793:2796 Poly <> cons constr
R3204:3207 Poly <> cons constr
R3216:3219 Poly <> cons constr
R3228:3230 Poly <> nil constr
R3232:3234 Coq.Init.Datatypes <> nat ind
R3221:3223 Coq.Init.Datatypes <> nat ind
R3209:3211 Coq.Init.Datatypes <> nat ind
def 3627:3632 <> length
R3646:3649 Poly <> list ind
R3651:3651 Poly <> X var
R3656:3658 Coq.Init.Datatypes <> nat ind
R3671:3671 Poly <> l var
R3682:3684 Poly <> nil constr
R3700:3703 Poly <> cons constr
R3712:3712 Coq.Init.Datatypes <> S constr
R3715:3720 Poly <> length def
R3722:3722 Poly <> X var
def 4259:4270 <> test_length1
R4324:4326 Coq.Init.Logic <> :type_scope:x_'='_x not
R4278:4283 Poly <> length def
R4290:4293 Poly <> cons constr
R4302:4305 Poly <> cons constr
R4314:4316 Poly <> nil constr
R4318:4320 Coq.Init.Datatypes <> nat ind
R4307:4309 Coq.Init.Datatypes <> nat ind
R4295:4297 Coq.Init.Datatypes <> nat ind
R4285:4287 Coq.Init.Datatypes <> nat ind
def 4483:4494 <> test_length2
R4541:4543 Coq.Init.Logic <> :type_scope:x_'='_x not
R4502:4507 Poly <> length def
R4515:4518 Poly <> cons constr
R4531:4533 Poly <> nil constr
R4535:4538 Basics <> bool ind
R4525:4528 Basics <> true constr
R4520:4523 Basics <> bool ind
R4509:4512 Basics <> bool ind
def 4719:4721 <> app
R4743:4746 Poly <> list ind
R4748:4748 Poly <> X var
R4770:4773 Poly <> list ind
R4775:4775 Poly <> X var
R4789:4790 Poly <> l1 var
R4801:4803 Poly <> nil constr
R4813:4814 Poly <> l2 var
R4820:4823 Poly <> cons constr
R4832:4835 Poly <> cons constr
R4842:4844 Poly <> app def
R4850:4851 Poly <> l2 var
R4846:4846 Poly <> X var
R4837:4837 Poly <> X var
def 4871:4874 <> snoc
R4888:4891 Poly <> list ind
R4893:4893 Poly <> X var
R4899:4899 Poly <> X var
R4905:4908 Poly <> list ind
R4910:4910 Poly <> X var
R4924:4924 Poly <> l var
R4935:4937 Poly <> nil constr
R4947:4950 Poly <> cons constr
R4957:4959 Poly <> nil constr
R4961:4961 Poly <> X var
R4954:4954 Poly <> v var
R4952:4952 Poly <> X var
R4968:4971 Poly <> cons constr
R4980:4983 Poly <> cons constr
R4990:4993 Poly <> snoc def
R4999:4999 Poly <> v var
R4995:4995 Poly <> X var
R4985:4985 Poly <> X var
def 5019:5021 <> rev
R5035:5038 Poly <> list ind
R5040:5040 Poly <> X var
R5045:5048 Poly <> list ind
R5050:5050 Poly <> X var
R5063:5063 Poly <> l var
R5074:5076 Poly <> nil constr
R5086:5088 Poly <> nil constr
R5090:5090 Poly <> X var
R5096:5099 Poly <> cons constr
R5108:5111 Poly <> snoc def
R5116:5118 Poly <> rev def
R5120:5120 Poly <> X var
R5113:5113 Poly <> X var
def 5143:5151 <> test_rev1
R5202:5207 Coq.Init.Logic <> :type_scope:x_'='_x not
R5241:5241 Coq.Init.Logic <> :type_scope:x_'='_x not
R5159:5161 Poly <> rev def
R5168:5171 Poly <> cons constr
R5180:5183 Poly <> cons constr
R5192:5194 Poly <> nil constr
R5196:5198 Coq.Init.Datatypes <> nat ind
R5185:5187 Coq.Init.Datatypes <> nat ind
R5173:5175 Coq.Init.Datatypes <> nat ind
R5163:5165 Coq.Init.Datatypes <> nat ind
R5208:5211 Poly <> cons constr
R5220:5223 Poly <> cons constr
R5232:5234 Poly <> nil constr
R5236:5238 Coq.Init.Datatypes <> nat ind
R5225:5227 Coq.Init.Datatypes <> nat ind
R5213:5215 Coq.Init.Datatypes <> nat ind
def 5279:5287 <> test_rev2
R5311:5313 Coq.Init.Logic <> :type_scope:x_'='_x not
R5292:5294 Poly <> rev def
R5302:5304 Poly <> nil constr
R5306:5309 Basics <> bool ind
R5296:5299 Basics <> bool ind
R5314:5316 Poly <> nil constr
R5318:5321 Basics <> bool ind
mod 5358:5366 <> MumbleBaz
ind 5488:5493 MumbleBaz mumble
constr 5509:5509 MumbleBaz a
constr 5524:5524 MumbleBaz b
constr 5556:5556 MumbleBaz c
R5513:5518 Poly <> mumble ind
R5545:5550 Poly <> mumble ind
R5538:5540 Coq.Init.Datatypes <> nat ind
R5528:5533 Poly <> mumble ind
R5560:5565 Poly <> mumble ind
ind 5578:5584 MumbleBaz grumble
constr 5609:5609 MumbleBaz d
constr 5637:5637 MumbleBaz e
R5623:5629 Poly <> grumble ind
R5613:5618 Poly MumbleBaz mumble ind
R5646:5652 Poly <> grumble ind
ind 6041:6043 MumbleBaz baz
constr 6060:6060 MumbleBaz x
constr 6080:6080 MumbleBaz y
R6071:6073 Poly <> baz ind
R6064:6066 Poly <> baz ind
R6099:6101 Poly <> baz ind
R6091:6094 Basics <> bool ind
R6084:6086 Poly <> baz ind
R6172:6180 Poly <> <> mod
def 6443:6446 <> app'
R6458:6461 Poly <> list ind
R6463:6463 Poly <> X var
R6476:6477 Poly <> l1 var
R6488:6490 Poly <> nil constr
R6500:6501 Poly <> l2 var
R6507:6510 Poly <> cons constr
R6519:6522 Poly <> cons constr
R6529:6532 Poly <> app' def
R6538:6539 Poly <> l2 var
R6534:6534 Poly <> X var
R6524:6524 Poly <> X var
R6629:6632 Poly <> app' def
R6696:6698 Poly <> app def
def 9343:9349 <> length'
R9363:9366 Poly <> list ind
R9368:9368 Poly <> X var
R9373:9375 Coq.Init.Datatypes <> nat ind
R9388:9388 Poly <> l var
R9399:9401 Poly <> nil constr
R9417:9420 Poly <> cons constr
R9429:9429 Coq.Init.Datatypes <> S constr
R9432:9438 Poly <> length' def
def 9727:9733 <> list123
R9740:9743 Poly <> cons constr
R9752:9755 Poly <> cons constr
R9764:9767 Poly <> cons constr
R9776:9778 Poly <> nil constr
R9780:9782 Coq.Init.Datatypes <> nat ind
R9769:9771 Coq.Init.Datatypes <> nat ind
R9757:9759 Coq.Init.Datatypes <> nat ind
R9745:9747 Coq.Init.Datatypes <> nat ind
def 9856:9863 <> list123'
R9868:9871 Poly <> cons constr
R9878:9881 Poly <> cons constr
R9888:9891 Poly <> cons constr
R9898:9900 Poly <> nil constr
R10386:10388 Poly <> nil constr
R10386:10388 Poly <> nil constr
R10405:10408 Poly <> cons constr
R10405:10408 Poly <> cons constr
R10490:10495 Poly <> length def
R10490:10495 Poly <> length def
R10514:10516 Poly <> app def
R10514:10516 Poly <> app def
R10539:10541 Poly <> rev def
R10539:10541 Poly <> rev def
R10561:10564 Poly <> snoc def
R10561:10564 Poly <> snoc def
def 10626:10634 <> list123''
R10639:10642 Poly <> cons constr
R10647:10650 Poly <> cons constr
R10655:10658 Poly <> cons constr
R10662:10664 Poly <> nil constr
R10676:10681 Poly <> length def
R10683:10691 Poly <> list123'' def
def 10885:10892 <> length''
R10906:10909 Poly <> list ind
R10911:10911 Poly <> X var
R10916:10918 Coq.Init.Datatypes <> nat ind
R10931:10931 Poly <> l var
R10942:10944 Poly <> nil constr
R10960:10963 Poly <> cons constr
R10972:10972 Coq.Init.Datatypes <> S constr
R10975:10982 Poly <> length'' def
def 12009:12013 <> mynil
R12017:12020 Poly <> list ind
R12022:12024 Coq.Init.Datatypes <> nat ind
R12029:12031 Poly <> nil constr
R12160:12162 Poly <> nil constr
def 12177:12182 <> mynil'
R12188:12190 Poly <> nil constr
R12192:12194 Coq.Init.Datatypes <> nat ind
R12487:12490 Poly <> cons constr
not 12474 <> ::x_'::'_x
R12572:12574 Poly <> nil constr
not 12563 <> ::'['_']'
R12607:12610 Poly <> cons constr
R12618:12621 Poly <> cons constr
R12625:12626 Poly <> ::'['_']' not
not 12586 <> ::'['_x_';'_'..'_';'_x_']'
R12656:12658 Poly <> app def
not 12643 <> ::x_'++'_x
def 12791:12800 <> list123'''
R12805:12805 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R12807:12808 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R12810:12811 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R12813:12813 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R12831:12834 Poly <> ::x_'++'_x not
R12824:12824 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R12830:12830 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R12826:12828 Basics <> :nat_scope:x_'+'_x not
R12835:12837 Poly <> nil constr
def 13189:13194 <> repeat
R13212:13212 Poly <> X var
R13224:13226 Coq.Init.Datatypes <> nat ind
R13231:13234 Poly <> list ind
R13236:13236 Poly <> X var
R13249:13253 Poly <> count var
R13269:13271 Poly <> nil constr
R13277:13277 Coq.Init.Datatypes <> S constr
R13290:13294 Poly <> ::x_'::'_x not
R13310:13310 Poly <> ::x_'::'_x not
R13289:13289 Poly <> n var
R13295:13300 Poly <> repeat def
R13302:13302 Poly <> n var
def 13328:13339 <> test_repeat1
R13357:13359 Coq.Init.Logic <> :type_scope:x_'='_x not
R13344:13349 Poly <> repeat def
R13351:13354 Basics <> true constr
R13360:13363 Poly <> cons constr
R13371:13374 Poly <> cons constr
R13381:13383 Poly <> nil constr
R13376:13379 Basics <> true constr
R13365:13368 Basics <> true constr
prf 13421:13427 <> nil_app
R13455:13458 Poly <> list ind
R13460:13460 Poly <> X var
R13473:13475 Coq.Init.Logic <> :type_scope:x_'='_x not
R13465:13467 Poly <> app def
R13472:13472 Poly <> l var
R13469:13470 Poly <> ::'['_']' not
R13476:13476 Poly <> l var
prf 13527:13534 <> rev_snoc
R13587:13587 Poly <> X var
R13622:13625 Poly <> list ind
R13627:13627 Poly <> X var
R13646:13648 Coq.Init.Logic <> :type_scope:x_'='_x not
R13632:13634 Poly <> rev def
R13637:13640 Poly <> snoc def
R13644:13644 Poly <> v var
R13642:13642 Poly <> s var
R13650:13654 Poly <> ::x_'::'_x not
R13660:13660 Poly <> ::x_'::'_x not
R13649:13649 Poly <> v var
R13655:13657 Poly <> rev def
R13659:13659 Poly <> s var
prf 13816:13829 <> rev_involutive
R13861:13864 Poly <> list ind
R13866:13866 Poly <> X var
R13882:13884 Coq.Init.Logic <> :type_scope:x_'='_x not
R13871:13873 Poly <> rev def
R13876:13878 Poly <> rev def
R13880:13880 Poly <> l var
R13885:13885 Poly <> l var
R14001:14008 Poly <> rev_snoc thm
R14001:14008 Poly <> rev_snoc thm
prf 14055:14070 <> snoc_with_append
R14131:14134 Poly <> list ind
R14136:14136 Poly <> X var
R14175:14175 Poly <> X var
R14197:14199 Coq.Init.Logic <> :type_scope:x_'='_x not
R14180:14183 Poly <> snoc def
R14196:14196 Poly <> v var
R14188:14191 Poly <> ::x_'++'_x not
R14186:14187 Poly <> l1 var
R14192:14193 Poly <> l2 var
R14202:14206 Poly <> ::x_'++'_x not
R14216:14216 Poly <> ::x_'++'_x not
R14200:14201 Poly <> l1 var
R14207:14210 Poly <> snoc def
R14215:14215 Poly <> v var
R14212:14213 Poly <> l2 var
ind 14654:14657 <> prod
constr 14684:14687 <> pair
R14701:14704 Poly <> prod ind
R14722:14725 Poly <> pair constr
R14722:14725 Poly <> pair constr
R14872:14875 Poly <> pair constr
not 14856 <> ::'('_x_','_x_')'
R15008:15011 Poly <> prod ind
not 14996 <> :type_scope:x_'*'_x
def 15634:15636 <> fst
R15657:15659 Poly <> :type_scope:x_'*'_x not
R15656:15656 Poly <> X var
R15660:15660 Poly <> Y var
R15665:15665 Poly <> X var
R15678:15678 Poly <> p var
R15685:15685 Poly <> ::'('_x_','_x_')' not
R15687:15687 Poly <> ::'('_x_','_x_')' not
R15689:15689 Poly <> ::'('_x_','_x_')' not
def 15713:15715 <> snd
R15736:15738 Poly <> :type_scope:x_'*'_x not
R15735:15735 Poly <> X var
R15739:15739 Poly <> Y var
R15744:15744 Poly <> Y var
R15757:15757 Poly <> p var
R15764:15764 Poly <> ::'('_x_','_x_')' not
R15766:15766 Poly <> ::'('_x_','_x_')' not
R15768:15768 Poly <> ::'('_x_','_x_')' not
def 16109:16115 <> combine
R16136:16139 Poly <> list ind
R16141:16141 Poly <> X var
R16150:16153 Poly <> list ind
R16155:16155 Poly <> Y var
R16171:16174 Poly <> list ind
R16178:16178 Poly <> :type_scope:x_'*'_x not
R16177:16177 Poly <> X var
R16179:16179 Poly <> Y var
R16193:16193 Poly <> ::'('_x_','_x_')' not
R16196:16196 Poly <> ::'('_x_','_x_')' not
R16199:16199 Poly <> ::'('_x_','_x_')' not
R16194:16195 Poly <> lx var
R16197:16198 Poly <> ly var
R16210:16210 Poly <> ::'('_x_','_x_')' not
R16213:16213 Poly <> ::'('_x_','_x_')' not
R16215:16215 Poly <> ::'('_x_','_x_')' not
R16211:16212 Poly <> ::'['_']' not
R16220:16221 Poly <> ::'['_']' not
R16227:16227 Poly <> ::'('_x_','_x_')' not
R16229:16229 Poly <> ::'('_x_','_x_')' not
R16232:16232 Poly <> ::'('_x_','_x_')' not
R16230:16231 Poly <> ::'['_']' not
R16237:16238 Poly <> ::'['_']' not
R16244:16244 Poly <> ::'('_x_','_x_')' not
R16250:16251 Poly <> ::'('_x_','_x_')' not
R16257:16257 Poly <> ::'('_x_','_x_')' not
R16246:16247 Poly <> ::x_'::'_x not
R16253:16254 Poly <> ::x_'::'_x not
R16267:16271 Poly <> ::x_'::'_x not
R16285:16285 Poly <> ::x_'::'_x not
R16262:16262 Poly <> ::'('_x_','_x_')' not
R16264:16264 Poly <> ::'('_x_','_x_')' not
R16266:16266 Poly <> ::'('_x_','_x_')' not
R16272:16278 Poly <> combine def
R16634:16636 Poly <> app def
R16725:16731 Poly <> combine def
R16752:16758 Poly <> combine def
R16766:16766 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R16772:16772 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R16778:16778 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R16783:16783 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R16788:16788 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R16784:16787 Basics <> true constr
R16779:16782 Basics <> true constr
R16773:16777 Basics <> false constr
R16767:16771 Basics <> false constr
R16760:16760 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R16762:16762 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R16764:16764 Poly <> ::'['_x_';'_'..'_';'_x_']' not
def 17159:17163 <> split
R17194:17197 Poly <> list ind
R17201:17201 Poly <> :type_scope:x_'*'_x not
R17200:17200 Poly <> X var
R17202:17202 Poly <> Y var
R17219:17219 Poly <> :type_scope:x_'*'_x not
R17226:17230 Poly <> :type_scope:x_'*'_x not
R17237:17237 Poly <> :type_scope:x_'*'_x not
R17220:17223 Poly <> list ind
R17225:17225 Poly <> X var
R17231:17234 Poly <> list ind
R17236:17236 Poly <> Y var
R17250:17250 Poly <> l var
R17261:17262 Poly <> ::'['_']' not
R17267:17267 Poly <> ::'('_x_','_x_')' not
R17270:17271 Poly <> ::'('_x_','_x_')' not
R17274:17274 Poly <> ::'('_x_','_x_')' not
R17268:17269 Poly <> ::'['_']' not
R17272:17273 Poly <> ::'['_']' not
R17285:17288 Poly <> ::x_'::'_x not
R17280:17280 Poly <> ::'('_x_','_x_')' not
R17282:17282 Poly <> ::'('_x_','_x_')' not
R17284:17284 Poly <> ::'('_x_','_x_')' not
R17301:17305 Poly <> split def
R17336:17336 Poly <> ::'('_x_','_x_')' not
R17339:17340 Poly <> ::'('_x_','_x_')' not
R17343:17343 Poly <> ::'('_x_','_x_')' not
R17348:17348 Poly <> ::'('_x_','_x_')' not
R17356:17357 Poly <> ::'('_x_','_x_')' not
R17365:17365 Poly <> ::'('_x_','_x_')' not
R17350:17353 Poly <> ::x_'::'_x not
R17359:17362 Poly <> ::x_'::'_x not
def 17406:17415 <> test_split
R17447:17449 Coq.Init.Logic <> :type_scope:x_'='_x not
R17420:17424 Poly <> split def
R17426:17426 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R17436:17436 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R17446:17446 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R17437:17437 Poly <> ::'('_x_','_x_')' not
R17439:17439 Poly <> ::'('_x_','_x_')' not
R17445:17445 Poly <> ::'('_x_','_x_')' not
R17440:17444 Basics <> false constr
R17427:17427 Poly <> ::'('_x_','_x_')' not
R17429:17429 Poly <> ::'('_x_','_x_')' not
R17435:17435 Poly <> ::'('_x_','_x_')' not
R17430:17434 Basics <> false constr
R17450:17450 Poly <> ::'('_x_','_x_')' not
R17456:17456 Poly <> ::'('_x_','_x_')' not
R17470:17470 Poly <> ::'('_x_','_x_')' not
R17451:17451 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R17453:17453 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R17455:17455 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R17457:17457 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R17463:17463 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R17469:17469 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R17464:17468 Basics <> false constr
R17458:17462 Basics <> false constr
ind 17767:17772 <> option
constr 17797:17800 <> Some
constr 17822:17825 <> None
R17809:17814 Poly <> option ind
R17829:17834 Poly <> option ind
R17850:17853 Poly <> Some constr
R17850:17853 Poly <> Some constr
R17873:17876 Poly <> None constr
R17873:17876 Poly <> None constr
def 17998:18002 <> index
R18020:18022 Coq.Init.Datatypes <> nat ind
R18045:18048 Poly <> list ind
R18050:18050 Poly <> X var
R18055:18060 Poly <> option ind
R18062:18062 Poly <> X var
R18075:18075 Poly <> l var
R18086:18087 Poly <> ::'['_']' not
R18092:18095 Poly <> None constr
R18102:18105 Poly <> ::x_'::'_x not
R18115:18121 Basics <> beq_nat def
R18125:18125 Coq.Init.Datatypes <> O constr
R18123:18123 Poly <> n var
R18144:18148 Poly <> index def
R18151:18154 Coq.Init.Peano <> pred def
R18156:18156 Poly <> n var
R18132:18135 Poly <> Some constr
def 18178:18188 <> test_index1
R18212:18215 Coq.Init.Logic <> :type_scope:x_'='_x not
R18195:18199 Poly <> index def
R18203:18203 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R18205:18205 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R18207:18207 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R18209:18209 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R18211:18211 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R18216:18219 Poly <> Some constr
def 18258:18268 <> test_index2
R18293:18296 Coq.Init.Logic <> :type_scope:x_'='_x not
R18275:18279 Poly <> index def
R18284:18284 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R18288:18288 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R18292:18292 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R18289:18289 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R18291:18291 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R18285:18285 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R18287:18287 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R18297:18300 Poly <> Some constr
R18302:18302 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R18304:18304 Poly <> ::'['_x_';'_'..'_';'_x_']' not
def 18341:18351 <> test_index3
R18373:18376 Coq.Init.Logic <> :type_scope:x_'='_x not
R18358:18362 Poly <> index def
R18367:18367 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R18372:18372 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R18368:18371 Basics <> true constr
R18377:18380 Poly <> None constr
def 18632:18637 <> hd_opt
R18655:18658 Poly <> list ind
R18660:18660 Poly <> X var
R18666:18671 Poly <> option ind
R18673:18673 Poly <> X var
R18686:18686 Poly <> l var
R18697:18698 Poly <> ::'['_']' not
R18703:18706 Poly <> None constr
R18713:18716 Poly <> ::x_'::'_x not
R18723:18726 Poly <> Some constr
R18865:18870 Poly <> hd_opt def
def 18882:18893 <> test_hd_opt1
R18910:18912 Coq.Init.Logic <> :type_scope:x_'='_x not
R18898:18903 Poly <> hd_opt def
R18905:18905 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R18907:18907 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R18909:18909 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R18913:18916 Poly <> Some constr
def 18954:18965 <> test_hd_opt2
R18988:18991 Coq.Init.Logic <> :type_scope:x_'='_x not
R18971:18976 Poly <> hd_opt def
R18979:18979 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R18983:18983 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R18987:18987 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R18984:18984 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R18986:18986 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R18980:18980 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R18982:18982 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R18992:18995 Poly <> Some constr
R18997:18997 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R18999:18999 Poly <> ::'['_x_';'_'..'_';'_x_']' not
def 19652:19661 <> doit3times
R19678:19678 Poly <> X var
R19675:19675 Poly <> X var
R19684:19684 Poly <> X var
R19689:19689 Poly <> X var
R19696:19696 Poly <> f var
R19699:19699 Poly <> f var
R19702:19702 Poly <> f var
R19704:19704 Poly <> n var
R19863:19872 Poly <> doit3times def
def 19944:19958 <> test_doit3times
R19982:19984 Coq.Init.Logic <> :type_scope:x_'='_x not
R19961:19970 Poly <> doit3times def
R19972:19979 Basics <> minustwo def
def 20023:20038 <> test_doit3times'
R20061:20063 Coq.Init.Logic <> :type_scope:x_'='_x not
R20041:20050 Poly <> doit3times def
R20057:20060 Basics <> true constr
R20052:20055 Basics <> negb def
R20064:20068 Basics <> false constr
R20362:20365 Coq.Init.Peano <> plus def
def 21087:21091 <> plus3
R21096:21099 Coq.Init.Peano <> plus def
R21110:21114 Poly <> plus3 def
def 21126:21135 <> test_plus3
R21149:21151 Coq.Init.Logic <> :type_scope:x_'='_x not
R21142:21146 Poly <> plus3 def
def 21189:21199 <> test_plus3'
R21223:21225 Coq.Init.Logic <> :type_scope:x_'='_x not
R21205:21214 Poly <> doit3times def
R21216:21220 Poly <> plus3 def
def 21263:21274 <> test_plus3''
R21300:21302 Coq.Init.Logic <> :type_scope:x_'='_x not
R21279:21288 Poly <> doit3times def
R21291:21294 Coq.Init.Peano <> plus def
def 22226:22235 <> prod_curry
R22268:22268 Poly <> Z var
R22260:22262 Poly <> :type_scope:x_'*'_x not
R22259:22259 Poly <> X var
R22263:22263 Poly <> Y var
R22276:22276 Poly <> X var
R22284:22284 Poly <> Y var
R22289:22289 Poly <> Z var
R22294:22294 Poly <> f var
R22296:22296 Poly <> ::'('_x_','_x_')' not
R22298:22299 Poly <> ::'('_x_','_x_')' not
R22301:22301 Poly <> ::'('_x_','_x_')' not
R22297:22297 Poly <> x var
R22300:22300 Poly <> y var
def 22446:22457 <> prod_uncurry
R22491:22491 Poly <> Z var
R22486:22486 Poly <> Y var
R22481:22481 Poly <> X var
R22500:22502 Poly <> :type_scope:x_'*'_x not
R22499:22499 Poly <> X var
R22503:22503 Poly <> Y var
R22508:22508 Poly <> Z var
R22521:22521 Poly <> p var
R22532:22532 Poly <> ::'('_x_','_x_')' not
R22534:22534 Poly <> ::'('_x_','_x_')' not
R22536:22536 Poly <> ::'('_x_','_x_')' not
R22541:22541 Poly <> f var
R22689:22698 Poly <> prod_curry def
R22765:22776 Poly <> prod_uncurry def
prf 22841:22853 <> uncurry_curry
R22894:22894 Poly <> Z var
R22889:22889 Poly <> Y var
R22884:22884 Poly <> X var
R22935:22937 Coq.Init.Logic <> :type_scope:x_'='_x not
R22904:22913 Poly <> prod_curry def
R22934:22934 Poly <> y var
R22932:22932 Poly <> x var
R22916:22927 Poly <> prod_uncurry def
R22929:22929 Poly <> f var
R22938:22938 Poly <> f var
R22942:22942 Poly <> y var
R22940:22940 Poly <> x var
prf 23001:23013 <> curry_uncurry
R23086:23086 Poly <> Z var
R23077:23079 Poly <> :type_scope:x_'*'_x not
R23076:23076 Poly <> X var
R23080:23080 Poly <> Y var
R23095:23097 Poly <> :type_scope:x_'*'_x not
R23094:23094 Poly <> X var
R23098:23098 Poly <> Y var
R23133:23135 Coq.Init.Logic <> :type_scope:x_'='_x not
R23104:23115 Poly <> prod_uncurry def
R23132:23132 Poly <> p var
R23118:23127 Poly <> prod_curry def
R23129:23129 Poly <> f var
R23136:23136 Poly <> f var
R23138:23138 Poly <> p var
def 23557:23562 <> filter
R23583:23586 Basics <> bool ind
R23580:23580 Poly <> X var
R23592:23595 Poly <> list ind
R23597:23597 Poly <> X var
R23619:23622 Poly <> list ind
R23624:23624 Poly <> X var
R23638:23638 Poly <> l var
R23649:23650 Poly <> ::'['_']' not
R23659:23660 Poly <> ::'['_']' not
R23667:23670 Poly <> ::x_'::'_x not
R23679:23682 Poly <> test var
R23747:23752 Poly <> filter def
R23754:23757 Poly <> test var
R23692:23696 Poly <> ::x_'::'_x not
R23710:23710 Poly <> ::x_'::'_x not
R23697:23702 Poly <> filter def
R23704:23707 Poly <> test var
def 23938:23949 <> test_filter1
R23974:23976 Coq.Init.Logic <> :type_scope:x_'='_x not
R23952:23957 Poly <> filter def
R23965:23965 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R23967:23967 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R23969:23969 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R23971:23971 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R23973:23973 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R23959:23963 Basics <> evenb def
R23977:23977 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R23979:23979 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R23981:23981 Poly <> ::'['_x_';'_'..'_';'_x_']' not
def 24033:24043 <> length_is_1
R24061:24064 Poly <> list ind
R24066:24066 Poly <> X var
R24071:24074 Basics <> bool ind
R24081:24087 Basics <> beq_nat def
R24090:24095 Poly <> length def
R24097:24097 Poly <> l var
def 24112:24123 <> test_filter2
R24198:24202 Coq.Init.Logic <> :type_scope:x_'='_x not
R24130:24135 Poly <> filter def
R24160:24161 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R24168:24169 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R24173:24174 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R24178:24179 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R24187:24188 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R24191:24192 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R24196:24197 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R24193:24193 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R24195:24195 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R24189:24190 Poly <> ::'['_']' not
R24180:24180 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R24182:24182 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R24184:24184 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R24186:24186 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R24175:24175 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R24177:24177 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R24170:24170 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R24172:24172 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R24162:24162 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R24164:24165 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R24167:24167 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R24137:24147 Poly <> length_is_1 def
R24203:24204 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R24208:24209 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R24213:24214 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R24218:24219 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R24215:24215 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R24217:24217 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R24210:24210 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R24212:24212 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R24205:24205 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R24207:24207 Poly <> ::'['_x_';'_'..'_';'_x_']' not
def 24390:24405 <> countoddmembers'
R24410:24413 Poly <> list ind
R24415:24417 Coq.Init.Datatypes <> nat ind
R24422:24424 Coq.Init.Datatypes <> nat ind
R24431:24436 Poly <> length def
R24439:24444 Poly <> filter def
R24451:24451 Poly <> l var
R24446:24449 Basics <> oddb def
def 24464:24485 <> test_countoddmembers'1
R24520:24522 Coq.Init.Logic <> :type_scope:x_'='_x not
R24490:24505 Poly <> countoddmembers' def
R24507:24507 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R24509:24509 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R24511:24511 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R24513:24513 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R24515:24515 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R24517:24517 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R24519:24519 Poly <> ::'['_x_';'_'..'_';'_x_']' not
def 24560:24581 <> test_countoddmembers'2
R24610:24612 Coq.Init.Logic <> :type_scope:x_'='_x not
R24586:24601 Poly <> countoddmembers' def
R24603:24603 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R24605:24605 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R24607:24607 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R24609:24609 Poly <> ::'['_x_';'_'..'_';'_x_']' not
def 24650:24671 <> test_countoddmembers'3
R24696:24698 Coq.Init.Logic <> :type_scope:x_'='_x not
R24676:24691 Poly <> countoddmembers' def
R24693:24695 Poly <> nil constr
def 25565:25578 <> test_anon_fun'
R25612:25614 Coq.Init.Logic <> :type_scope:x_'='_x not
R25583:25592 Poly <> doit3times def
R25605:25607 Basics <> :nat_scope:x_'*'_x not
R25604:25604 Poly <> n var
R25608:25608 Poly <> n var
def 25751:25763 <> test_filter2'
R25858:25862 Coq.Init.Logic <> :type_scope:x_'='_x not
R25770:25775 Poly <> filter def
R25820:25821 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R25828:25829 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R25833:25834 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R25838:25839 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R25847:25848 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R25851:25852 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R25856:25857 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R25853:25853 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R25855:25855 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R25849:25850 Poly <> ::'['_']' not
R25840:25840 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R25842:25842 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R25844:25844 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R25846:25846 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R25835:25835 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R25837:25837 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R25830:25830 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R25832:25832 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R25822:25822 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R25824:25825 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R25827:25827 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R25787:25793 Basics <> beq_nat def
R25796:25801 Poly <> length def
R25803:25803 Poly <> l var
R25863:25864 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R25868:25869 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R25873:25874 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R25878:25879 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R25875:25875 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R25877:25877 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R25870:25870 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R25872:25872 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R25865:25865 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R25867:25867 Poly <> ::'['_x_';'_'..'_';'_x_']' not
def 26181:26195 <> filter_even_gt7
R26202:26205 Poly <> list ind
R26207:26209 Coq.Init.Datatypes <> nat ind
R26214:26217 Poly <> list ind
R26219:26221 Coq.Init.Datatypes <> nat ind
R26228:26233 Poly <> filter def
R26275:26275 Poly <> l var
R26245:26248 Basics <> andb def
R26261:26267 Basics <> blt_nat def
R26271:26271 Poly <> n var
R26251:26255 Basics <> evenb def
R26257:26257 Poly <> n var
def 26287:26308 <> test_filter_even_gt7_1
R26349:26351 Coq.Init.Logic <> :type_scope:x_'='_x not
R26314:26328 Poly <> filter_even_gt7 def
R26330:26330 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R26332:26332 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R26334:26334 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R26336:26336 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R26338:26338 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R26341:26341 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R26343:26343 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R26346:26346 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R26348:26348 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R26352:26352 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R26355:26355 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R26358:26358 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R26360:26360 Poly <> ::'['_x_';'_'..'_';'_x_']' not
def 26397:26418 <> test_filter_even_gt7_2
R26454:26456 Coq.Init.Logic <> :type_scope:x_'='_x not
R26424:26438 Poly <> filter_even_gt7 def
R26440:26440 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R26442:26442 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R26444:26444 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R26446:26446 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R26449:26449 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R26453:26453 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R26457:26458 Poly <> ::'['_']' not
def 27106:27115 <> complement
R27146:27149 Basics <> bool ind
R27141:27141 Poly <> X var
R27157:27157 Poly <> X var
R27165:27168 Basics <> negb def
R27171:27179 Poly <> predicate var
R27181:27181 Poly <> x var
def 27197:27205 <> partition
R27231:27234 Basics <> bool ind
R27226:27226 Poly <> X var
R27242:27245 Poly <> list ind
R27247:27247 Poly <> X var
R27279:27281 Poly <> :type_scope:x_'*'_x not
R27273:27276 Poly <> list ind
R27278:27278 Poly <> X var
R27282:27285 Poly <> list ind
R27287:27287 Poly <> X var
R27294:27294 Poly <> ::'('_x_','_x_')' not
R27308:27309 Poly <> ::'('_x_','_x_')' not
R27336:27336 Poly <> ::'('_x_','_x_')' not
R27295:27300 Poly <> filter def
R27307:27307 Poly <> l var
R27302:27305 Poly <> test var
R27310:27315 Poly <> filter def
R27335:27335 Poly <> l var
R27318:27327 Poly <> complement def
R27329:27332 Poly <> test var
def 27348:27362 <> test_partition1
R27391:27393 Coq.Init.Logic <> :type_scope:x_'='_x not
R27365:27373 Poly <> partition def
R27380:27380 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R27382:27382 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R27384:27384 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R27386:27386 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R27388:27388 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R27390:27390 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R27375:27378 Basics <> oddb def
R27394:27394 Poly <> ::'('_x_','_x_')' not
R27402:27403 Poly <> ::'('_x_','_x_')' not
R27409:27409 Poly <> ::'('_x_','_x_')' not
R27395:27395 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R27397:27397 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R27399:27399 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R27401:27401 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R27404:27404 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R27406:27406 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R27408:27408 Poly <> ::'['_x_';'_'..'_';'_x_']' not
def 27445:27459 <> test_partition2
R27496:27498 Coq.Init.Logic <> :type_scope:x_'='_x not
R27462:27470 Poly <> partition def
R27489:27489 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R27491:27491 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R27493:27493 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R27495:27495 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R27482:27486 Basics <> false constr
R27499:27499 Poly <> ::'('_x_','_x_')' not
R27502:27503 Poly <> ::'('_x_','_x_')' not
R27511:27511 Poly <> ::'('_x_','_x_')' not
R27500:27501 Poly <> ::'['_']' not
R27504:27504 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R27506:27506 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R27508:27508 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R27510:27510 Poly <> ::'['_x_';'_'..'_';'_x_']' not
def 27696:27698 <> map
R27717:27717 Poly <> Y var
R27714:27714 Poly <> X var
R27723:27726 Poly <> list ind
R27728:27728 Poly <> X var
R27747:27750 Poly <> list ind
R27752:27752 Poly <> Y var
R27766:27766 Poly <> l var
R27777:27778 Poly <> ::'['_']' not
R27787:27788 Poly <> ::'['_']' not
R27795:27798 Poly <> ::x_'::'_x not
R27804:27804 Poly <> ::x_'::'_x not
R27808:27813 Poly <> ::x_'::'_x not
R27821:27821 Poly <> ::x_'::'_x not
R27805:27805 Poly <> f var
R27814:27816 Poly <> map def
R27818:27818 Poly <> f var
def 28049:28057 <> test_map1
R28080:28082 Coq.Init.Logic <> :type_scope:x_'='_x not
R28060:28062 Poly <> map def
R28073:28073 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R28075:28075 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R28077:28077 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R28079:28079 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R28065:28068 Coq.Init.Peano <> plus def
R28083:28083 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R28085:28085 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R28087:28087 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R28089:28089 Poly <> ::'['_x_';'_'..'_';'_x_']' not
def 28398:28406 <> test_map2
R28427:28429 Coq.Init.Logic <> :type_scope:x_'='_x not
R28409:28411 Poly <> map def
R28418:28418 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R28420:28420 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R28422:28422 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R28424:28424 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R28426:28426 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R28413:28416 Basics <> oddb def
R28430:28430 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R28436:28436 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R28441:28441 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R28447:28447 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R28452:28452 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R28448:28451 Basics <> true constr
R28442:28446 Basics <> false constr
R28437:28440 Basics <> true constr
R28431:28435 Basics <> false constr
def 28639:28647 <> test_map3
R28695:28699 Coq.Init.Logic <> :type_scope:x_'='_x not
R28654:28656 Poly <> map def
R28686:28686 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R28688:28688 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R28690:28690 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R28692:28692 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R28694:28694 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R28668:28668 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R28676:28676 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R28683:28683 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R28677:28680 Basics <> oddb def
R28682:28682 Poly <> n var
R28669:28673 Basics <> evenb def
R28675:28675 Poly <> n var
R28700:28700 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R28713:28713 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R28726:28726 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R28739:28739 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R28752:28752 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R28740:28740 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R28746:28746 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R28751:28751 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R28747:28750 Basics <> true constr
R28741:28745 Basics <> false constr
R28727:28727 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R28732:28732 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R28738:28738 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R28733:28737 Basics <> false constr
R28728:28731 Basics <> true constr
R28714:28714 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R28720:28720 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R28725:28725 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R28721:28724 Basics <> true constr
R28715:28719 Basics <> false constr
R28701:28701 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R28706:28706 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R28712:28712 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R28707:28711 Basics <> false constr
R28702:28705 Basics <> true constr
prf 28947:28954 <> map_snoc
R28988:28988 Poly <> Y var
R28983:28983 Poly <> X var
R28996:28999 Poly <> list ind
R29001:29001 Poly <> X var
R29009:29009 Poly <> X var
R29031:29033 Coq.Init.Logic <> :type_scope:x_'='_x not
R29015:29017 Poly <> map def
R29022:29025 Poly <> snoc def
R29029:29029 Poly <> x var
R29027:29027 Poly <> l var
R29019:29019 Poly <> f var
R29034:29037 Poly <> snoc def
R29050:29050 Poly <> f var
R29052:29052 Poly <> x var
R29040:29042 Poly <> map def
R29046:29046 Poly <> l var
R29044:29044 Poly <> f var
prf 29213:29219 <> map_rev
R29253:29253 Poly <> Y var
R29248:29248 Poly <> X var
R29261:29264 Poly <> list ind
R29266:29266 Poly <> X var
R29285:29287 Coq.Init.Logic <> :type_scope:x_'='_x not
R29272:29274 Poly <> map def
R29279:29281 Poly <> rev def
R29283:29283 Poly <> l var
R29276:29276 Poly <> f var
R29288:29290 Poly <> rev def
R29293:29295 Poly <> map def
R29299:29299 Poly <> l var
R29297:29297 Poly <> f var
R29427:29434 Poly <> map_snoc thm
R29427:29434 Poly <> map_snoc thm
def 29932:29939 <> flat_map
R29960:29963 Poly <> list ind
R29965:29965 Poly <> Y var
R29955:29955 Poly <> X var
R29971:29974 Poly <> list ind
R29976:29976 Poly <> X var
R30001:30004 Poly <> list ind
R30006:30006 Poly <> Y var
R30020:30020 Poly <> l var
R30031:30032 Poly <> ::'['_']' not
R30037:30038 Poly <> ::'['_']' not
R30045:30048 Poly <> ::x_'::'_x not
R30055:30055 Poly <> ::x_'++'_x not
R30059:30064 Poly <> ::x_'++'_x not
R30078:30078 Poly <> ::x_'++'_x not
R30056:30056 Poly <> f var
R30065:30072 Poly <> flat_map def
R30074:30074 Poly <> f var
def 30096:30109 <> test_flat_map1
R30149:30153 Coq.Init.Logic <> :type_scope:x_'='_x not
R30114:30121 Poly <> flat_map def
R30142:30142 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R30144:30144 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R30146:30146 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R30148:30148 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R30133:30133 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R30135:30135 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R30137:30137 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R30139:30139 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R30138:30138 Poly <> n var
R30136:30136 Poly <> n var
R30134:30134 Poly <> n var
R30154:30154 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R30156:30157 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R30159:30160 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R30162:30163 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R30165:30166 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R30168:30169 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R30171:30172 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R30174:30175 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R30177:30178 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R30180:30180 Poly <> ::'['_x_';'_'..'_';'_x_']' not
def 30380:30389 <> option_map
R30414:30414 Poly <> Y var
R30409:30409 Poly <> X var
R30423:30428 Poly <> option ind
R30430:30430 Poly <> X var
R30457:30462 Poly <> option ind
R30464:30464 Poly <> Y var
R30477:30478 Poly <> xo var
R30491:30494 Poly <> None constr
R30499:30502 Poly <> None constr
R30510:30513 Poly <> Some constr
R30520:30523 Poly <> Some constr
R30526:30526 Poly <> f var
def 31347:31350 <> fold
R31373:31373 Poly <> Y var
R31370:31370 Poly <> Y var
R31367:31367 Poly <> X var
R31379:31382 Poly <> list ind
R31384:31384 Poly <> X var
R31390:31390 Poly <> Y var
R31395:31395 Poly <> Y var
R31408:31408 Poly <> l var
R31419:31421 Poly <> nil constr
R31426:31426 Poly <> b var
R31433:31436 Poly <> ::x_'::'_x not
R31442:31442 Poly <> f var
R31447:31450 Poly <> fold def
R31456:31456 Poly <> b var
R31452:31452 Poly <> f var
R31940:31943 Poly <> fold def
R31945:31948 Basics <> andb def
def 32010:32022 <> fold_example1
R32047:32049 Coq.Init.Logic <> :type_scope:x_'='_x not
R32026:32029 Poly <> fold def
R32036:32036 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R32038:32038 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R32040:32040 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R32042:32042 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R32044:32044 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R32031:32034 Coq.Init.Peano <> mult def
def 32088:32100 <> fold_example2
R32141:32143 Coq.Init.Logic <> :type_scope:x_'='_x not
R32104:32107 Poly <> fold def
R32137:32140 Basics <> true constr
R32114:32114 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R32119:32119 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R32124:32124 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R32130:32130 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R32135:32135 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R32131:32134 Basics <> true constr
R32125:32129 Basics <> false constr
R32120:32123 Basics <> true constr
R32115:32118 Basics <> true constr
R32109:32112 Basics <> andb def
R32144:32148 Basics <> false constr
def 32185:32197 <> fold_example3
R32232:32234 Coq.Init.Logic <> :type_scope:x_'='_x not
R32201:32204 Poly <> fold def
R32230:32231 Poly <> ::'['_']' not
R32211:32211 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R32215:32215 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R32218:32218 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R32224:32224 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R32228:32228 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R32225:32225 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R32227:32227 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R32219:32219 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R32221:32221 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R32223:32223 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R32216:32217 Poly <> ::'['_']' not
R32212:32212 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R32214:32214 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R32206:32208 Poly <> app def
R32235:32235 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R32237:32237 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R32239:32239 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R32241:32241 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R32243:32243 Poly <> ::'['_x_';'_'..'_';'_x_']' not
def 33190:33197 <> constfun
R33213:33213 Poly <> X var
R33223:33223 Poly <> X var
R33218:33220 Coq.Init.Datatypes <> nat ind
R33237:33239 Coq.Init.Datatypes <> nat ind
R33245:33245 Poly <> x var
def 33260:33264 <> ftrue
R33269:33276 Poly <> constfun def
R33278:33281 Basics <> true constr
def 33293:33309 <> constfun_example1
R33320:33322 Coq.Init.Logic <> :type_scope:x_'='_x not
R33313:33317 Poly <> ftrue def
R33323:33326 Basics <> true constr
def 33363:33379 <> constfun_example2
R33398:33400 Coq.Init.Logic <> :type_scope:x_'='_x not
R33384:33391 Poly <> constfun def
def 33744:33751 <> override
R33772:33772 Poly <> X var
R33767:33769 Coq.Init.Datatypes <> nat ind
R33778:33780 Coq.Init.Datatypes <> nat ind
R33786:33786 Poly <> X var
R33796:33796 Poly <> X var
R33791:33793 Coq.Init.Datatypes <> nat ind
R33810:33812 Coq.Init.Datatypes <> nat ind
R33821:33827 Basics <> beq_nat def
R33831:33832 Poly <> k' var
R33829:33829 Poly <> k var
R33846:33846 Poly <> f var
R33848:33849 Poly <> k' var
R33839:33839 Poly <> x var
def 34048:34058 <> fmostlytrue
R34063:34070 Poly <> override def
R34099:34103 Basics <> false constr
R34073:34080 Poly <> override def
R34090:34094 Basics <> false constr
R34082:34086 Poly <> ftrue def
def 34127:34143 <> override_example1
R34160:34162 Coq.Init.Logic <> :type_scope:x_'='_x not
R34147:34157 Poly <> fmostlytrue def
R34163:34166 Basics <> true constr
def 34203:34219 <> override_example2
R34236:34238 Coq.Init.Logic <> :type_scope:x_'='_x not
R34223:34233 Poly <> fmostlytrue def
R34239:34243 Basics <> false constr
def 34280:34296 <> override_example3
R34313:34315 Coq.Init.Logic <> :type_scope:x_'='_x not
R34300:34310 Poly <> fmostlytrue def
R34316:34319 Basics <> true constr
def 34356:34372 <> override_example4
R34389:34391 Coq.Init.Logic <> :type_scope:x_'='_x not
R34376:34386 Poly <> fmostlytrue def
R34392:34396 Basics <> false constr
prf 34696:34711 <> override_example
R34725:34728 Basics <> bool ind
R34766:34768 Coq.Init.Logic <> :type_scope:x_'='_x not
R34735:34742 Poly <> override def
R34759:34762 Basics <> true constr
R34745:34752 Poly <> constfun def
R34754:34754 Poly <> b var
R34769:34769 Poly <> b var
prf 35793:35810 <> unfold_example_bad
R35854:35856 Coq.Init.Logic <> :type_scope:x_'='_x not
R35850:35852 Basics <> :nat_scope:x_'+'_x not
R35843:35847 Poly <> plus3 def
R35849:35849 Poly <> n var
R35858:35860 Basics <> :nat_scope:x_'+'_x not
R35857:35857 Poly <> m var
R35833:35835 Coq.Init.Logic <> :type_scope:x_'='_x not
R35829:35831 Basics <> :nat_scope:x_'+'_x not
R35832:35832 Poly <> n var
R35836:35836 Poly <> m var
prf 36224:36237 <> unfold_example
R36281:36283 Coq.Init.Logic <> :type_scope:x_'='_x not
R36277:36279 Basics <> :nat_scope:x_'+'_x not
R36270:36274 Poly <> plus3 def
R36276:36276 Poly <> n var
R36285:36287 Basics <> :nat_scope:x_'+'_x not
R36284:36284 Poly <> m var
R36260:36262 Coq.Init.Logic <> :type_scope:x_'='_x not
R36256:36258 Basics <> :nat_scope:x_'+'_x not
R36259:36259 Poly <> n var
R36263:36263 Poly <> m var
R36323:36327 Poly <> plus3 def
prf 36544:36554 <> override_eq
R36586:36586 Poly <> X var
R36581:36583 Coq.Init.Datatypes <> nat ind
R36610:36612 Coq.Init.Logic <> :type_scope:x_'='_x not
R36593:36600 Poly <> override def
R36606:36606 Poly <> x var
R36604:36604 Poly <> k var
R36602:36602 Poly <> f var
R36609:36609 Poly <> k var
R36613:36613 Poly <> x var
R36650:36657 Poly <> override def
R36673:36684 Induction <> beq_nat_refl thm
R36673:36684 Induction <> beq_nat_refl thm
prf 36881:36892 <> override_neq
R36934:36934 Poly <> X var
R36929:36931 Coq.Init.Datatypes <> nat ind
R37003:37005 Coq.Init.Logic <> :type_scope:x_'='_x not
R36983:36990 Poly <> override def
R36997:36998 Poly <> x2 var
R36994:36995 Poly <> k2 var
R36992:36992 Poly <> f var
R37001:37002 Poly <> k1 var
R37006:37007 Poly <> x1 var
R36968:36970 Coq.Init.Logic <> :type_scope:x_'='_x not
R36955:36961 Basics <> beq_nat def
R36966:36967 Poly <> k1 var
R36963:36964 Poly <> k2 var
R36971:36975 Basics <> false constr
R36944:36946 Coq.Init.Logic <> :type_scope:x_'='_x not
R36940:36940 Poly <> f var
R36942:36943 Poly <> k1 var
R36947:36948 Poly <> x1 var
R37058:37065 Poly <> override def
def 37569:37579 <> fold_length
R37597:37600 Poly <> list ind
R37602:37602 Poly <> X var
R37607:37609 Coq.Init.Datatypes <> nat ind
R37616:37619 Poly <> fold def
R37638:37638 Poly <> l var
R37633:37633 Coq.Init.Datatypes <> S constr
R37635:37635 Poly <> n var
def 37652:37668 <> test_fold_length1
R37691:37693 Coq.Init.Logic <> :type_scope:x_'='_x not
R37672:37682 Poly <> fold_length def
R37684:37684 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R37686:37686 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R37688:37688 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R37690:37690 Poly <> ::'['_x_';'_'..'_';'_x_']' not
prf 37779:37797 <> fold_length_correct
R37815:37818 Poly <> list ind
R37820:37820 Poly <> X var
R37839:37841 Coq.Init.Logic <> :type_scope:x_'='_x not
R37826:37836 Poly <> fold_length def
R37838:37838 Poly <> l var
R37842:37847 Poly <> length def
R37849:37849 Poly <> l var
R37873:37883 Poly <> fold_length def
def 38151:38158 <> fold_map
R38181:38181 Poly <> Y var
R38176:38176 Poly <> X var
R38189:38192 Poly <> list ind
R38194:38194 Poly <> X var
R38199:38202 Poly <> list ind
R38204:38204 Poly <> Y var
R38211:38214 Poly <> fold def
R38244:38245 Poly <> ::'['_']' not
R38242:38242 Poly <> l var
R38229:38229 Poly <> ::x_'::'_x not
R38233:38237 Poly <> ::x_'::'_x not
R38230:38230 Poly <> f var
R38232:38232 Poly <> x var
R38238:38239 Poly <> l' var
prf 38347:38362 <> fold_map_correct
R38387:38387 Poly <> Y var
R38382:38382 Poly <> X var
R38395:38398 Poly <> list ind
R38400:38400 Poly <> X var
R38418:38420 Coq.Init.Logic <> :type_scope:x_'='_x not
R38406:38413 Poly <> fold_map def
R38417:38417 Poly <> l var
R38415:38415 Poly <> f var
R38421:38423 Poly <> map def
R38427:38427 Poly <> l var
R38425:38425 Poly <> f var
R38539:38546 Poly <> fold_map def
R38569:38572 Poly <> fold def
R38622:38623 Poly <> ::'['_']' not
R38595:38598 Poly <> list ind
R38610:38613 Poly <> ::x_'::'_x not
R38608:38609 Poly <> x0 var
R38614:38616 Poly <> l'0 var
R38636:38643 Poly <> fold_map def
R38636:38643 Poly <> fold_map def
R38569:38572 Poly <> fold def
R38622:38623 Poly <> ::'['_']' not
R38595:38598 Poly <> list ind
R38610:38613 Poly <> ::x_'::'_x not
R38608:38609 Poly <> x0 var
R38614:38616 Poly <> l'0 var
R38694:38701 Poly <> fold_map def
